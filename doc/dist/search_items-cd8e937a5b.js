searchNodes=[{"doc":"Glific keeps the contexts that define your domain and business logic.Contexts are also responsible for managing your data, regardless if it comes from the database, an external API or others.For now we'll keep some commonly used functions here, until we need a new file","ref":"Glific.html","title":"Glific","type":"module"},{"doc":"Wrapper to return :ok/:error when parsing strings to potential integers","ref":"Glific.html#parse_maybe_integer/1","title":"Glific.parse_maybe_integer/1","type":"function"},{"doc":"Lets get rid of all non valid characters. We are assuming any language and hence using unicode syntax and not restricting ourselves to alphanumeric","ref":"Glific.html#string_clean/1","title":"Glific.string_clean/1","type":"function"},{"doc":"Glific interface for all provider communication","ref":"Glific.Communications.html","title":"Glific.Communications","type":"module"},{"doc":"Get the current provider based on the config","ref":"Glific.Communications.html#provider/0","title":"Glific.Communications.provider/0","type":"function"},{"doc":"Get the current provider worker based on the organization | Config | Defaultconfig","ref":"Glific.Communications.html#provider_worker/0","title":"Glific.Communications.provider_worker/0","type":"function"},{"doc":"Unified function to publish data on the graphql subscription endpoint. This is still looking for a place to actually reside. This is a good next stop for nowFor now the data types are Message and MessageTag","ref":"Glific.Communications.html#publish_data/2","title":"Glific.Communications.publish_data/2","type":"function"},{"doc":"The Message Communication Context, which encapsulates and manages tags and the related join tables.","ref":"Glific.Communications.Message.html","title":"Glific.Communications.Message","type":"module"},{"doc":"Callback in case of any error while sending the message","ref":"Glific.Communications.Message.html#handle_error_response/2","title":"Glific.Communications.Message.handle_error_response/2","type":"function"},{"doc":"Callback when message send succsully","ref":"Glific.Communications.Message.html#handle_success_response/2","title":"Glific.Communications.Message.handle_success_response/2","type":"function"},{"doc":"Callback when we receive a message from whats app","ref":"Glific.Communications.Message.html#receive_message/2","title":"Glific.Communications.Message.receive_message/2","type":"function"},{"doc":"Send message to receiver using define provider.","ref":"Glific.Communications.Message.html#send_message/2","title":"Glific.Communications.Message.send_message/2","type":"function"},{"doc":"Callback to update the provider status for a message","ref":"Glific.Communications.Message.html#update_provider_status/2","title":"Glific.Communications.Message.update_provider_status/2","type":"function"},{"doc":"The Contacts context.","ref":"Glific.Contacts.html","title":"Glific.Contacts","type":"module"},{"doc":"Check if we can send a message to the contact","ref":"Glific.Contacts.html#can_send_message_to?/1","title":"Glific.Contacts.can_send_message_to?/1","type":"function"},{"doc":"Check if we can send a session message to the contact","ref":"Glific.Contacts.html#can_send_message_to?/2","title":"Glific.Contacts.can_send_message_to?/2","type":"function"},{"doc":"Returns an %Ecto.Changeset{} for tracking contact changes.Examplesiex&gt; change_contact(contact) %Ecto.Changeset{data: %Contact{}}","ref":"Glific.Contacts.html#change_contact/2","title":"Glific.Contacts.change_contact/2","type":"function"},{"doc":"Get contact's current location","ref":"Glific.Contacts.html#contact_location/1","title":"Glific.Contacts.contact_location/1","type":"function"},{"doc":"Update DB fields when contact opted in","ref":"Glific.Contacts.html#contact_opted_in/2","title":"Glific.Contacts.contact_opted_in/2","type":"function"},{"doc":"Update DB fields when contact opted out","ref":"Glific.Contacts.html#contact_opted_out/2","title":"Glific.Contacts.contact_opted_out/2","type":"function"},{"doc":"Return the count of contacts, using the same filter as list_contacts","ref":"Glific.Contacts.html#count_contacts/1","title":"Glific.Contacts.count_contacts/1","type":"function"},{"doc":"Creates a contact.Examplesiex&gt; create_contact(%{field: value}) {:ok, %Contact{}} iex&gt; create_contact(%{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Contacts.html#create_contact/1","title":"Glific.Contacts.create_contact/1","type":"function"},{"doc":"Creates a location.Examplesiex&gt; Glific.Contacts.create_location(%{name: value}) {:ok, %Glific.Contacts.Location{}} iex&gt; Glific.Contacts.create_location(%{bad_field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Contacts.html#create_location/1","title":"Glific.Contacts.create_location/1","type":"function"},{"doc":"Deletes a contact.Examplesiex&gt; delete_contact(contact) {:ok, %Contact{}} iex&gt; delete_contact(contact) {:error, %Ecto.Changeset{}}","ref":"Glific.Contacts.html#delete_contact/1","title":"Glific.Contacts.delete_contact/1","type":"function"},{"doc":"Gets a single contact.Raises Ecto.NoResultsError if the Contact does not exist.Examplesiex&gt; get_contact!(123) %Contact{} iex&gt; get_contact!(456) ** (Ecto.NoResultsError)","ref":"Glific.Contacts.html#get_contact!/1","title":"Glific.Contacts.get_contact!/1","type":"function"},{"doc":"Check if this contact id is a new conatct","ref":"Glific.Contacts.html#is_new_contact/1","title":"Glific.Contacts.is_new_contact/1","type":"function"},{"doc":"Returns the list of contacts.Examplesiex&gt; list_contacts() [%Contact{}, ...]","ref":"Glific.Contacts.html#list_contacts/1","title":"Glific.Contacts.list_contacts/1","type":"function"},{"doc":"Updates a contact.Examplesiex&gt; update_contact(contact, %{field: new_value}) {:ok, %Contact{}} iex&gt; update_contact(contact, %{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Contacts.html#update_contact/2","title":"Glific.Contacts.update_contact/2","type":"function"},{"doc":"Gets or Creates a Contact based on the unique indexes in the table. If there is a match it returns the existing contact, else it creates a new one","ref":"Glific.Contacts.html#upsert/1","title":"Glific.Contacts.upsert/1","type":"function"},{"doc":"The minimal wrapper for the base Contact structure","ref":"Glific.Contacts.Contact.html","title":"Glific.Contacts.Contact","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Contacts.Contact.html#changeset/2","title":"Glific.Contacts.Contact.changeset/2","type":"function"},{"doc":"","ref":"Glific.Contacts.Contact.html#t:t/0","title":"Glific.Contacts.Contact.t/0","type":"type"},{"doc":"Current location of a contact","ref":"Glific.Contacts.Location.html","title":"Glific.Contacts.Location","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Contacts.Location.html#changeset/2","title":"Glific.Contacts.Location.changeset/2","type":"function"},{"doc":"","ref":"Glific.Contacts.Location.html#t:t/0","title":"Glific.Contacts.Location.t/0","type":"type"},{"doc":"The main Glific abstraction that exposes the data in a stuctured manner as a set of conversations. For now each contact is associated with one and only one conversation. We will keep the API simple for now, but it is likely to become more complex and will require a fair number of iterations to get right","ref":"Glific.Conversations.html","title":"Glific.Conversations","type":"module"},{"doc":"Returns the filtered conversation by contact id","ref":"Glific.Conversations.html#conversation_by_id/1","title":"Glific.Conversations.conversation_by_id/1","type":"function"},{"doc":"Returns the last M conversations, each conversation not more than N messages","ref":"Glific.Conversations.html#list_conversations/1","title":"Glific.Conversations.list_conversations/1","type":"function"},{"doc":"The Glific Abstraction to represent the conversation with a user. This unifies a vast majority of the glific data types including: message, contact, and tag","ref":"Glific.Conversations.Conversation.html","title":"Glific.Conversations.Conversation","type":"module"},{"doc":"Create a new conversation. A contact is required for the conversation. Messages can be added later on","ref":"Glific.Conversations.Conversation.html#new/2","title":"Glific.Conversations.Conversation.new/2","type":"function"},{"doc":"","ref":"Glific.Conversations.Conversation.html#t:t/0","title":"Glific.Conversations.Conversation.t/0","type":"type"},{"doc":"The Enum provides a location for all enum related macros. All the constants that Ecto/Elixir used are exposed here as macros, so other files can invoke them as simple functions","ref":"Glific.Enums.html","title":"Glific.Enums","type":"module"},{"doc":"Lets ensure that the constants evaluate to some expected valuesExamplesiex&gt; Glific.Enums.api_status_const() [:ok, :error]iex&gt; Glific.Enums.contact_status_const() [:failed, :invalid, :processing, :valid]iex&gt; Glific.Enums.flow_case_const() [:has_any_word]iex&gt; Glific.Enums.flow_router_const() [:switch]iex&gt; Glific.Enums.flow_action_type_const() [:enter_flow, :send_msg, :set_contact_language, :wait_for_response, :set_contact_field]iex&gt; Glific.Enums.flow_type_const() [:message]iex&gt; Glific.Enums.message_flow_const() [:inbound, :outbound]iex&gt; Glific.Enums.message_status_const() [:sent, :delivered, :enqueued, :error, :read, :received, :contact_opt_out]iex&gt; Glific.Enums.message_type_const() [:audio, :contact, :document, :hsm, :image, :location, :text, :video]iex&gt; Glific.Enums.question_type_const() [:text, :numeric, :date]iex&gt; Glific.Enums.sort_order_const() [:asc, :desc]We also test the ecto enums in this file, since they exist outside a moduleiex&gt; Glific.Enums.APIStatus.enum_map() Glific.Enums.api_status_const()iex&gt; Glific.Enums.ContactStatus.enum_map() Glific.Enums.contact_status_const()iex&gt; Glific.Enums.FlowCase.enum_map() Glific.Enums.flow_case_const()iex&gt; Glific.Enums.FlowRouter.enum_map() Glific.Enums.flow_router_const()iex&gt; Glific.Enums.FlowActionType.enum_map() Glific.Enums.flow_action_type_const()iex&gt; Glific.Enums.FlowType.enum_map() Glific.Enums.flow_type_const()iex&gt; Glific.Enums.MessageFlow.enum_map() Glific.Enums.message_flow_const()iex&gt; Glific.Enums.MessageStatus.enum_map() Glific.Enums.message_status_const()iex&gt; Glific.Enums.MessageType.enum_map() Glific.Enums.message_type_const()iex&gt; Glific.Enums.QuestionType.enum_map() Glific.Enums.question_type_const()iex&gt; Glific.Enums.SortOrder.enum_map() Glific.Enums.sort_order_const()","ref":"Glific.Enums.html#api_status_const/0","title":"Glific.Enums.api_status_const/0","type":"macro"},{"doc":"","ref":"Glific.Enums.html#contact_status_const/0","title":"Glific.Enums.contact_status_const/0","type":"macro"},{"doc":"","ref":"Glific.Enums.html#flow_action_type_const/0","title":"Glific.Enums.flow_action_type_const/0","type":"macro"},{"doc":"","ref":"Glific.Enums.html#flow_case_const/0","title":"Glific.Enums.flow_case_const/0","type":"macro"},{"doc":"","ref":"Glific.Enums.html#flow_router_const/0","title":"Glific.Enums.flow_router_const/0","type":"macro"},{"doc":"","ref":"Glific.Enums.html#flow_type_const/0","title":"Glific.Enums.flow_type_const/0","type":"macro"},{"doc":"","ref":"Glific.Enums.html#message_flow_const/0","title":"Glific.Enums.message_flow_const/0","type":"macro"},{"doc":"","ref":"Glific.Enums.html#message_status_const/0","title":"Glific.Enums.message_status_const/0","type":"macro"},{"doc":"","ref":"Glific.Enums.html#message_type_const/0","title":"Glific.Enums.message_type_const/0","type":"macro"},{"doc":"","ref":"Glific.Enums.html#question_type_const/0","title":"Glific.Enums.question_type_const/0","type":"macro"},{"doc":"","ref":"Glific.Enums.html#sort_order_const/0","title":"Glific.Enums.sort_order_const/0","type":"macro"},{"doc":"","ref":"Glific.Enums.APIStatus.html","title":"Glific.Enums.APIStatus","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1.","ref":"Glific.Enums.APIStatus.html#cast/1","title":"Glific.Enums.APIStatus.cast/1","type":"function"},{"doc":"","ref":"Glific.Enums.APIStatus.html#create_type/0","title":"Glific.Enums.APIStatus.create_type/0","type":"function"},{"doc":"","ref":"Glific.Enums.APIStatus.html#drop_type/0","title":"Glific.Enums.APIStatus.drop_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1.","ref":"Glific.Enums.APIStatus.html#dump/1","title":"Glific.Enums.APIStatus.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1.","ref":"Glific.Enums.APIStatus.html#embed_as/1","title":"Glific.Enums.APIStatus.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2.","ref":"Glific.Enums.APIStatus.html#equal?/2","title":"Glific.Enums.APIStatus.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1.","ref":"Glific.Enums.APIStatus.html#load/1","title":"Glific.Enums.APIStatus.load/1","type":"function"},{"doc":"","ref":"Glific.Enums.APIStatus.html#schema/0","title":"Glific.Enums.APIStatus.schema/0","type":"function"},{"doc":"","ref":"Glific.Enums.APIStatus.html#schemaless_type/0","title":"Glific.Enums.APIStatus.schemaless_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0.","ref":"Glific.Enums.APIStatus.html#type/0","title":"Glific.Enums.APIStatus.type/0","type":"function"},{"doc":"","ref":"Glific.Enums.APIStatus.html#valid_value?/1","title":"Glific.Enums.APIStatus.valid_value?/1","type":"function"},{"doc":"","ref":"Glific.Enums.APIStatus.html#t:t/0","title":"Glific.Enums.APIStatus.t/0","type":"type"},{"doc":"The Enums constant are where all enum values across our entire application should be defined. This is the source of truth for all enums","ref":"Glific.Enums.Constants.html","title":"Glific.Enums.Constants","type":"module"},{"doc":"","ref":"Glific.Enums.ContactStatus.html","title":"Glific.Enums.ContactStatus","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1.","ref":"Glific.Enums.ContactStatus.html#cast/1","title":"Glific.Enums.ContactStatus.cast/1","type":"function"},{"doc":"","ref":"Glific.Enums.ContactStatus.html#create_type/0","title":"Glific.Enums.ContactStatus.create_type/0","type":"function"},{"doc":"","ref":"Glific.Enums.ContactStatus.html#drop_type/0","title":"Glific.Enums.ContactStatus.drop_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1.","ref":"Glific.Enums.ContactStatus.html#dump/1","title":"Glific.Enums.ContactStatus.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1.","ref":"Glific.Enums.ContactStatus.html#embed_as/1","title":"Glific.Enums.ContactStatus.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2.","ref":"Glific.Enums.ContactStatus.html#equal?/2","title":"Glific.Enums.ContactStatus.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1.","ref":"Glific.Enums.ContactStatus.html#load/1","title":"Glific.Enums.ContactStatus.load/1","type":"function"},{"doc":"","ref":"Glific.Enums.ContactStatus.html#schema/0","title":"Glific.Enums.ContactStatus.schema/0","type":"function"},{"doc":"","ref":"Glific.Enums.ContactStatus.html#schemaless_type/0","title":"Glific.Enums.ContactStatus.schemaless_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0.","ref":"Glific.Enums.ContactStatus.html#type/0","title":"Glific.Enums.ContactStatus.type/0","type":"function"},{"doc":"","ref":"Glific.Enums.ContactStatus.html#valid_value?/1","title":"Glific.Enums.ContactStatus.valid_value?/1","type":"function"},{"doc":"","ref":"Glific.Enums.ContactStatus.html#t:t/0","title":"Glific.Enums.ContactStatus.t/0","type":"type"},{"doc":"","ref":"Glific.Enums.FlowActionType.html","title":"Glific.Enums.FlowActionType","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1.","ref":"Glific.Enums.FlowActionType.html#cast/1","title":"Glific.Enums.FlowActionType.cast/1","type":"function"},{"doc":"","ref":"Glific.Enums.FlowActionType.html#create_type/0","title":"Glific.Enums.FlowActionType.create_type/0","type":"function"},{"doc":"","ref":"Glific.Enums.FlowActionType.html#drop_type/0","title":"Glific.Enums.FlowActionType.drop_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1.","ref":"Glific.Enums.FlowActionType.html#dump/1","title":"Glific.Enums.FlowActionType.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1.","ref":"Glific.Enums.FlowActionType.html#embed_as/1","title":"Glific.Enums.FlowActionType.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2.","ref":"Glific.Enums.FlowActionType.html#equal?/2","title":"Glific.Enums.FlowActionType.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1.","ref":"Glific.Enums.FlowActionType.html#load/1","title":"Glific.Enums.FlowActionType.load/1","type":"function"},{"doc":"","ref":"Glific.Enums.FlowActionType.html#schema/0","title":"Glific.Enums.FlowActionType.schema/0","type":"function"},{"doc":"","ref":"Glific.Enums.FlowActionType.html#schemaless_type/0","title":"Glific.Enums.FlowActionType.schemaless_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0.","ref":"Glific.Enums.FlowActionType.html#type/0","title":"Glific.Enums.FlowActionType.type/0","type":"function"},{"doc":"","ref":"Glific.Enums.FlowActionType.html#valid_value?/1","title":"Glific.Enums.FlowActionType.valid_value?/1","type":"function"},{"doc":"","ref":"Glific.Enums.FlowActionType.html#t:t/0","title":"Glific.Enums.FlowActionType.t/0","type":"type"},{"doc":"","ref":"Glific.Enums.FlowCase.html","title":"Glific.Enums.FlowCase","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1.","ref":"Glific.Enums.FlowCase.html#cast/1","title":"Glific.Enums.FlowCase.cast/1","type":"function"},{"doc":"","ref":"Glific.Enums.FlowCase.html#create_type/0","title":"Glific.Enums.FlowCase.create_type/0","type":"function"},{"doc":"","ref":"Glific.Enums.FlowCase.html#drop_type/0","title":"Glific.Enums.FlowCase.drop_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1.","ref":"Glific.Enums.FlowCase.html#dump/1","title":"Glific.Enums.FlowCase.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1.","ref":"Glific.Enums.FlowCase.html#embed_as/1","title":"Glific.Enums.FlowCase.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2.","ref":"Glific.Enums.FlowCase.html#equal?/2","title":"Glific.Enums.FlowCase.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1.","ref":"Glific.Enums.FlowCase.html#load/1","title":"Glific.Enums.FlowCase.load/1","type":"function"},{"doc":"","ref":"Glific.Enums.FlowCase.html#schema/0","title":"Glific.Enums.FlowCase.schema/0","type":"function"},{"doc":"","ref":"Glific.Enums.FlowCase.html#schemaless_type/0","title":"Glific.Enums.FlowCase.schemaless_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0.","ref":"Glific.Enums.FlowCase.html#type/0","title":"Glific.Enums.FlowCase.type/0","type":"function"},{"doc":"","ref":"Glific.Enums.FlowCase.html#valid_value?/1","title":"Glific.Enums.FlowCase.valid_value?/1","type":"function"},{"doc":"","ref":"Glific.Enums.FlowCase.html#t:t/0","title":"Glific.Enums.FlowCase.t/0","type":"type"},{"doc":"","ref":"Glific.Enums.FlowRouter.html","title":"Glific.Enums.FlowRouter","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1.","ref":"Glific.Enums.FlowRouter.html#cast/1","title":"Glific.Enums.FlowRouter.cast/1","type":"function"},{"doc":"","ref":"Glific.Enums.FlowRouter.html#create_type/0","title":"Glific.Enums.FlowRouter.create_type/0","type":"function"},{"doc":"","ref":"Glific.Enums.FlowRouter.html#drop_type/0","title":"Glific.Enums.FlowRouter.drop_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1.","ref":"Glific.Enums.FlowRouter.html#dump/1","title":"Glific.Enums.FlowRouter.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1.","ref":"Glific.Enums.FlowRouter.html#embed_as/1","title":"Glific.Enums.FlowRouter.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2.","ref":"Glific.Enums.FlowRouter.html#equal?/2","title":"Glific.Enums.FlowRouter.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1.","ref":"Glific.Enums.FlowRouter.html#load/1","title":"Glific.Enums.FlowRouter.load/1","type":"function"},{"doc":"","ref":"Glific.Enums.FlowRouter.html#schema/0","title":"Glific.Enums.FlowRouter.schema/0","type":"function"},{"doc":"","ref":"Glific.Enums.FlowRouter.html#schemaless_type/0","title":"Glific.Enums.FlowRouter.schemaless_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0.","ref":"Glific.Enums.FlowRouter.html#type/0","title":"Glific.Enums.FlowRouter.type/0","type":"function"},{"doc":"","ref":"Glific.Enums.FlowRouter.html#valid_value?/1","title":"Glific.Enums.FlowRouter.valid_value?/1","type":"function"},{"doc":"","ref":"Glific.Enums.FlowRouter.html#t:t/0","title":"Glific.Enums.FlowRouter.t/0","type":"type"},{"doc":"","ref":"Glific.Enums.FlowType.html","title":"Glific.Enums.FlowType","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1.","ref":"Glific.Enums.FlowType.html#cast/1","title":"Glific.Enums.FlowType.cast/1","type":"function"},{"doc":"","ref":"Glific.Enums.FlowType.html#create_type/0","title":"Glific.Enums.FlowType.create_type/0","type":"function"},{"doc":"","ref":"Glific.Enums.FlowType.html#drop_type/0","title":"Glific.Enums.FlowType.drop_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1.","ref":"Glific.Enums.FlowType.html#dump/1","title":"Glific.Enums.FlowType.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1.","ref":"Glific.Enums.FlowType.html#embed_as/1","title":"Glific.Enums.FlowType.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2.","ref":"Glific.Enums.FlowType.html#equal?/2","title":"Glific.Enums.FlowType.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1.","ref":"Glific.Enums.FlowType.html#load/1","title":"Glific.Enums.FlowType.load/1","type":"function"},{"doc":"","ref":"Glific.Enums.FlowType.html#schema/0","title":"Glific.Enums.FlowType.schema/0","type":"function"},{"doc":"","ref":"Glific.Enums.FlowType.html#schemaless_type/0","title":"Glific.Enums.FlowType.schemaless_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0.","ref":"Glific.Enums.FlowType.html#type/0","title":"Glific.Enums.FlowType.type/0","type":"function"},{"doc":"","ref":"Glific.Enums.FlowType.html#valid_value?/1","title":"Glific.Enums.FlowType.valid_value?/1","type":"function"},{"doc":"","ref":"Glific.Enums.FlowType.html#t:t/0","title":"Glific.Enums.FlowType.t/0","type":"type"},{"doc":"","ref":"Glific.Enums.MessageFlow.html","title":"Glific.Enums.MessageFlow","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1.","ref":"Glific.Enums.MessageFlow.html#cast/1","title":"Glific.Enums.MessageFlow.cast/1","type":"function"},{"doc":"","ref":"Glific.Enums.MessageFlow.html#create_type/0","title":"Glific.Enums.MessageFlow.create_type/0","type":"function"},{"doc":"","ref":"Glific.Enums.MessageFlow.html#drop_type/0","title":"Glific.Enums.MessageFlow.drop_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1.","ref":"Glific.Enums.MessageFlow.html#dump/1","title":"Glific.Enums.MessageFlow.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1.","ref":"Glific.Enums.MessageFlow.html#embed_as/1","title":"Glific.Enums.MessageFlow.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2.","ref":"Glific.Enums.MessageFlow.html#equal?/2","title":"Glific.Enums.MessageFlow.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1.","ref":"Glific.Enums.MessageFlow.html#load/1","title":"Glific.Enums.MessageFlow.load/1","type":"function"},{"doc":"","ref":"Glific.Enums.MessageFlow.html#schema/0","title":"Glific.Enums.MessageFlow.schema/0","type":"function"},{"doc":"","ref":"Glific.Enums.MessageFlow.html#schemaless_type/0","title":"Glific.Enums.MessageFlow.schemaless_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0.","ref":"Glific.Enums.MessageFlow.html#type/0","title":"Glific.Enums.MessageFlow.type/0","type":"function"},{"doc":"","ref":"Glific.Enums.MessageFlow.html#valid_value?/1","title":"Glific.Enums.MessageFlow.valid_value?/1","type":"function"},{"doc":"","ref":"Glific.Enums.MessageFlow.html#t:t/0","title":"Glific.Enums.MessageFlow.t/0","type":"type"},{"doc":"","ref":"Glific.Enums.MessageStatus.html","title":"Glific.Enums.MessageStatus","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1.","ref":"Glific.Enums.MessageStatus.html#cast/1","title":"Glific.Enums.MessageStatus.cast/1","type":"function"},{"doc":"","ref":"Glific.Enums.MessageStatus.html#create_type/0","title":"Glific.Enums.MessageStatus.create_type/0","type":"function"},{"doc":"","ref":"Glific.Enums.MessageStatus.html#drop_type/0","title":"Glific.Enums.MessageStatus.drop_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1.","ref":"Glific.Enums.MessageStatus.html#dump/1","title":"Glific.Enums.MessageStatus.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1.","ref":"Glific.Enums.MessageStatus.html#embed_as/1","title":"Glific.Enums.MessageStatus.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2.","ref":"Glific.Enums.MessageStatus.html#equal?/2","title":"Glific.Enums.MessageStatus.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1.","ref":"Glific.Enums.MessageStatus.html#load/1","title":"Glific.Enums.MessageStatus.load/1","type":"function"},{"doc":"","ref":"Glific.Enums.MessageStatus.html#schema/0","title":"Glific.Enums.MessageStatus.schema/0","type":"function"},{"doc":"","ref":"Glific.Enums.MessageStatus.html#schemaless_type/0","title":"Glific.Enums.MessageStatus.schemaless_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0.","ref":"Glific.Enums.MessageStatus.html#type/0","title":"Glific.Enums.MessageStatus.type/0","type":"function"},{"doc":"","ref":"Glific.Enums.MessageStatus.html#valid_value?/1","title":"Glific.Enums.MessageStatus.valid_value?/1","type":"function"},{"doc":"","ref":"Glific.Enums.MessageStatus.html#t:t/0","title":"Glific.Enums.MessageStatus.t/0","type":"type"},{"doc":"","ref":"Glific.Enums.MessageType.html","title":"Glific.Enums.MessageType","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1.","ref":"Glific.Enums.MessageType.html#cast/1","title":"Glific.Enums.MessageType.cast/1","type":"function"},{"doc":"","ref":"Glific.Enums.MessageType.html#create_type/0","title":"Glific.Enums.MessageType.create_type/0","type":"function"},{"doc":"","ref":"Glific.Enums.MessageType.html#drop_type/0","title":"Glific.Enums.MessageType.drop_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1.","ref":"Glific.Enums.MessageType.html#dump/1","title":"Glific.Enums.MessageType.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1.","ref":"Glific.Enums.MessageType.html#embed_as/1","title":"Glific.Enums.MessageType.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2.","ref":"Glific.Enums.MessageType.html#equal?/2","title":"Glific.Enums.MessageType.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1.","ref":"Glific.Enums.MessageType.html#load/1","title":"Glific.Enums.MessageType.load/1","type":"function"},{"doc":"","ref":"Glific.Enums.MessageType.html#schema/0","title":"Glific.Enums.MessageType.schema/0","type":"function"},{"doc":"","ref":"Glific.Enums.MessageType.html#schemaless_type/0","title":"Glific.Enums.MessageType.schemaless_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0.","ref":"Glific.Enums.MessageType.html#type/0","title":"Glific.Enums.MessageType.type/0","type":"function"},{"doc":"","ref":"Glific.Enums.MessageType.html#valid_value?/1","title":"Glific.Enums.MessageType.valid_value?/1","type":"function"},{"doc":"","ref":"Glific.Enums.MessageType.html#t:t/0","title":"Glific.Enums.MessageType.t/0","type":"type"},{"doc":"","ref":"Glific.Enums.QuestionType.html","title":"Glific.Enums.QuestionType","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1.","ref":"Glific.Enums.QuestionType.html#cast/1","title":"Glific.Enums.QuestionType.cast/1","type":"function"},{"doc":"","ref":"Glific.Enums.QuestionType.html#create_type/0","title":"Glific.Enums.QuestionType.create_type/0","type":"function"},{"doc":"","ref":"Glific.Enums.QuestionType.html#drop_type/0","title":"Glific.Enums.QuestionType.drop_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1.","ref":"Glific.Enums.QuestionType.html#dump/1","title":"Glific.Enums.QuestionType.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1.","ref":"Glific.Enums.QuestionType.html#embed_as/1","title":"Glific.Enums.QuestionType.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2.","ref":"Glific.Enums.QuestionType.html#equal?/2","title":"Glific.Enums.QuestionType.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1.","ref":"Glific.Enums.QuestionType.html#load/1","title":"Glific.Enums.QuestionType.load/1","type":"function"},{"doc":"","ref":"Glific.Enums.QuestionType.html#schema/0","title":"Glific.Enums.QuestionType.schema/0","type":"function"},{"doc":"","ref":"Glific.Enums.QuestionType.html#schemaless_type/0","title":"Glific.Enums.QuestionType.schemaless_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0.","ref":"Glific.Enums.QuestionType.html#type/0","title":"Glific.Enums.QuestionType.type/0","type":"function"},{"doc":"","ref":"Glific.Enums.QuestionType.html#valid_value?/1","title":"Glific.Enums.QuestionType.valid_value?/1","type":"function"},{"doc":"","ref":"Glific.Enums.QuestionType.html#t:t/0","title":"Glific.Enums.QuestionType.t/0","type":"type"},{"doc":"","ref":"Glific.Enums.SortOrder.html","title":"Glific.Enums.SortOrder","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1.","ref":"Glific.Enums.SortOrder.html#cast/1","title":"Glific.Enums.SortOrder.cast/1","type":"function"},{"doc":"","ref":"Glific.Enums.SortOrder.html#create_type/0","title":"Glific.Enums.SortOrder.create_type/0","type":"function"},{"doc":"","ref":"Glific.Enums.SortOrder.html#drop_type/0","title":"Glific.Enums.SortOrder.drop_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1.","ref":"Glific.Enums.SortOrder.html#dump/1","title":"Glific.Enums.SortOrder.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1.","ref":"Glific.Enums.SortOrder.html#embed_as/1","title":"Glific.Enums.SortOrder.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2.","ref":"Glific.Enums.SortOrder.html#equal?/2","title":"Glific.Enums.SortOrder.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1.","ref":"Glific.Enums.SortOrder.html#load/1","title":"Glific.Enums.SortOrder.load/1","type":"function"},{"doc":"","ref":"Glific.Enums.SortOrder.html#schema/0","title":"Glific.Enums.SortOrder.schema/0","type":"function"},{"doc":"","ref":"Glific.Enums.SortOrder.html#schemaless_type/0","title":"Glific.Enums.SortOrder.schemaless_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0.","ref":"Glific.Enums.SortOrder.html#type/0","title":"Glific.Enums.SortOrder.type/0","type":"function"},{"doc":"","ref":"Glific.Enums.SortOrder.html#valid_value?/1","title":"Glific.Enums.SortOrder.valid_value?/1","type":"function"},{"doc":"","ref":"Glific.Enums.SortOrder.html#t:t/0","title":"Glific.Enums.SortOrder.t/0","type":"type"},{"doc":"The Flows context.","ref":"Glific.Flows.html","title":"Glific.Flows","type":"module"},{"doc":"A generic json traversal and building the structure for a specific flow schema which is an array of objects in the json file. Used for Node/Actions, Node/Exits, Router/Cases, and Router/Categories","ref":"Glific.Flows.html#build_flow_objects/4","title":"Glific.Flows.build_flow_objects/4","type":"function"},{"doc":"Returns an %Ecto.Changeset{} for tracking flow changes.Examplesiex&gt; change_flow(flow) %Ecto.Changeset{data: %Flow{}}","ref":"Glific.Flows.html#change_flow/2","title":"Glific.Flows.change_flow/2","type":"function"},{"doc":"Check the required fields for all flow objects. If missing, raise an exception","ref":"Glific.Flows.html#check_required_fields/2","title":"Glific.Flows.check_required_fields/2","type":"function"},{"doc":"Creates a flow.Examplesiex&gt; create_flow(%{field: value}) {:ok, %Flow{}} iex&gt; create_flow(%{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Flows.html#create_flow/1","title":"Glific.Flows.create_flow/1","type":"function"},{"doc":"Save new revision for the flow","ref":"Glific.Flows.html#create_flow_revision/1","title":"Glific.Flows.create_flow_revision/1","type":"function"},{"doc":"Deletes a flow.Examplesiex&gt; delete_flow(flow) {:ok, %Flow{}} iex&gt; delete_flow(flow) {:error, %Ecto.Changeset{}}","ref":"Glific.Flows.html#delete_flow/1","title":"Glific.Flows.delete_flow/1","type":"function"},{"doc":"Gets a single flow.Raises Ecto.NoResultsError if the Flow does not exist.Examplesiex&gt; get_flow!(123) %Flow{} iex&gt; get_flow!(456) ** (Ecto.NoResultsError)","ref":"Glific.Flows.html#get_flow!/1","title":"Glific.Flows.get_flow!/1","type":"function"},{"doc":"Get specific flow revision by number","ref":"Glific.Flows.html#get_flow_revision/2","title":"Glific.Flows.get_flow_revision/2","type":"function"},{"doc":"Get a list of all the revisions based on a flow UUID","ref":"Glific.Flows.html#get_flow_revision_list/1","title":"Glific.Flows.get_flow_revision_list/1","type":"function"},{"doc":"Returns the list of flows.Examplesiex&gt; list_flows() [%Flow{}, ...]","ref":"Glific.Flows.html#list_flows/1","title":"Glific.Flows.list_flows/1","type":"function"},{"doc":"Updates a flow.Examplesiex&gt; update_flow(flow, %{field: new_value}) {:ok, %Flow{}} iex&gt; update_flow(flow, %{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Flows.html#update_flow/2","title":"Glific.Flows.update_flow/2","type":"function"},{"doc":"The Action object which encapsulates one action in a given node.","ref":"Glific.Flows.Action.html","title":"Glific.Flows.Action","type":"module"},{"doc":"Execute a action, given a message stream. Consume the message stream as processing occurs","ref":"Glific.Flows.Action.html#execute/3","title":"Glific.Flows.Action.execute/3","type":"function"},{"doc":"Process a json structure from floweditor to the Glific data types","ref":"Glific.Flows.Action.html#process/3","title":"Glific.Flows.Action.process/3","type":"function"},{"doc":"","ref":"Glific.Flows.Action.html#t:t/0","title":"Glific.Flows.Action.t/0","type":"type"},{"doc":"The Case object which encapsulates one category in a given node.","ref":"Glific.Flows.Case.html","title":"Glific.Flows.Case","type":"module"},{"doc":"Execute a case, given a message. This is the only execute function which has a different signature, since it just consumes one message at a time and executes it against a predefined function It also returns a boolean, rather than a tuple","ref":"Glific.Flows.Case.html#execute/3","title":"Glific.Flows.Case.execute/3","type":"function"},{"doc":"Process a json structure from floweditor to the Glific data types","ref":"Glific.Flows.Case.html#process/3","title":"Glific.Flows.Case.process/3","type":"function"},{"doc":"","ref":"Glific.Flows.Case.html#t:t/0","title":"Glific.Flows.Case.t/0","type":"type"},{"doc":"The Category object which encapsulates one category in a given node.","ref":"Glific.Flows.Category.html","title":"Glific.Flows.Category","type":"module"},{"doc":"Execute a category, given a message stream.","ref":"Glific.Flows.Category.html#execute/3","title":"Glific.Flows.Category.execute/3","type":"function"},{"doc":"Process a json structure from floweditor to the Glific data types","ref":"Glific.Flows.Category.html#process/3","title":"Glific.Flows.Category.process/3","type":"function"},{"doc":"","ref":"Glific.Flows.Category.html#t:t/0","title":"Glific.Flows.Category.t/0","type":"type"},{"doc":"Since many of the functions, also do a few actions like send a message etc centralizing it here","ref":"Glific.Flows.ContactAction.html","title":"Glific.Flows.ContactAction","type":"module"},{"doc":"Contact opts out","ref":"Glific.Flows.ContactAction.html#optout/1","title":"Glific.Flows.ContactAction.optout/1","type":"function"},{"doc":"Given a shortcode and a context, send the right session template message to the contact","ref":"Glific.Flows.ContactAction.html#send_message/2","title":"Glific.Flows.ContactAction.send_message/2","type":"function"},{"doc":"Since many of the functions set/update fields in contact and related tables, lets centralize all the code here for now","ref":"Glific.Flows.ContactField.html","title":"Glific.Flows.ContactField","type":"module"},{"doc":"Add a field {key, value} to a contact. For now, all preferences are stored under the settings map, with a sub-map of preferences. We expect to get more clarity on this soon","ref":"Glific.Flows.ContactField.html#add_contact_field/4","title":"Glific.Flows.ContactField.add_contact_field/4","type":"function"},{"doc":"Reset the fields for a contact.","ref":"Glific.Flows.ContactField.html#reset_contact_fields/1","title":"Glific.Flows.ContactField.reset_contact_fields/1","type":"function"},{"doc":"Since many of the functions set/update fields in contact and related tables, lets centralize all the code here for now","ref":"Glific.Flows.ContactSetting.html","title":"Glific.Flows.ContactSetting","type":"module"},{"doc":"Add a preference to a contact. For now, all preferences are stored under the settings map, with a sub-map of preferences. We expect to get more clarity on this soon","ref":"Glific.Flows.ContactSetting.html#add_contact_preference/3","title":"Glific.Flows.ContactSetting.add_contact_preference/3","type":"function"},{"doc":"Delete a preference from a contact. We actually dont really delete it, we just set the value to false, and hence turn it off","ref":"Glific.Flows.ContactSetting.html#delete_contact_preference/2","title":"Glific.Flows.ContactSetting.delete_contact_preference/2","type":"function"},{"doc":"Get all the preferences for this contact","ref":"Glific.Flows.ContactSetting.html#get_contact_preferences/1","title":"Glific.Flows.ContactSetting.get_contact_preferences/1","type":"function"},{"doc":"Reset the preferences for a contact.","ref":"Glific.Flows.ContactSetting.html#reset_contact_preference/1","title":"Glific.Flows.ContactSetting.reset_contact_preference/1","type":"function"},{"doc":"Set the language for a contact","ref":"Glific.Flows.ContactSetting.html#set_contact_language/2","title":"Glific.Flows.ContactSetting.set_contact_language/2","type":"function"},{"doc":"Set the name for a contact","ref":"Glific.Flows.ContactSetting.html#set_contact_name/2","title":"Glific.Flows.ContactSetting.set_contact_name/2","type":"function"},{"doc":"Wrapper function for setting the contact preference, if preference is empty, it indicates to reset the preference","ref":"Glific.Flows.ContactSetting.html#set_contact_preference/2","title":"Glific.Flows.ContactSetting.set_contact_preference/2","type":"function"},{"doc":"The Exit object which encapsulates one exit in a given node.","ref":"Glific.Flows.Exit.html","title":"Glific.Flows.Exit","type":"module"},{"doc":"Execute a exit, given a message stream.","ref":"Glific.Flows.Exit.html#execute/3","title":"Glific.Flows.Exit.execute/3","type":"function"},{"doc":"Process a json structure from floweditor to the Glific data types","ref":"Glific.Flows.Exit.html#process/3","title":"Glific.Flows.Exit.process/3","type":"function"},{"doc":"","ref":"Glific.Flows.Exit.html#t:t/0","title":"Glific.Flows.Exit.t/0","type":"type"},{"doc":"The flow object which encapsulates the complete flow as emitted by by https://github.com/nyaruka/floweditor","ref":"Glific.Flows.Flow.html","title":"Glific.Flows.Flow","type":"module"},{"doc":"Store all the flows in cachex :flows_cache. At some point, we will just use this dynamically","ref":"Glific.Flows.Flow.html#cachex_flows/1","title":"Glific.Flows.Flow.cachex_flows/1","type":"function"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Flows.Flow.html#changeset/2","title":"Glific.Flows.Flow.changeset/2","type":"function"},{"doc":"Build the context so we can execute the flow","ref":"Glific.Flows.Flow.html#context/2","title":"Glific.Flows.Flow.context/2","type":"function"},{"doc":"Helper function for various genstage processes to set state by loading all active flows from the database and loading flows on demand","ref":"Glific.Flows.Flow.html#get_and_cache_flows/1","title":"Glific.Flows.Flow.get_and_cache_flows/1","type":"function"},{"doc":"Return a flow for a specific uuid. Cache is not present in cache","ref":"Glific.Flows.Flow.html#get_flow/1","title":"Glific.Flows.Flow.get_flow/1","type":"function"},{"doc":"load the latest revision, specifically json definition from the flow_revision table. We return the clean definition back","ref":"Glific.Flows.Flow.html#get_latest_definition/1","title":"Glific.Flows.Flow.get_latest_definition/1","type":"function"},{"doc":"Process a json structure from floweditor to the Glific data types","ref":"Glific.Flows.Flow.html#process/2","title":"Glific.Flows.Flow.process/2","type":"function"},{"doc":"Create a subflow of an existing flow","ref":"Glific.Flows.Flow.html#start_sub_flow/2","title":"Glific.Flows.Flow.start_sub_flow/2","type":"function"},{"doc":"","ref":"Glific.Flows.Flow.html#t:t/0","title":"Glific.Flows.Flow.t/0","type":"type"},{"doc":"When we are running a flow, we are running it in the context of a contact and/or a conversation (or other Glific data types). Let encapsulate this in a module and isolate the flow from the other aspects of Glific","ref":"Glific.Flows.FlowContext.html","title":"Glific.Flows.FlowContext","type":"module"},{"doc":"Check if there is an active context (i.e. with a non null, node_uuid for this contact)","ref":"Glific.Flows.FlowContext.html#active_context/1","title":"Glific.Flows.FlowContext.active_context/1","type":"function"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Flows.FlowContext.html#changeset/2","title":"Glific.Flows.FlowContext.changeset/2","type":"function"},{"doc":"Create a FlowContext","ref":"Glific.Flows.FlowContext.html#create_flow_context/1","title":"Glific.Flows.FlowContext.create_flow_context/1","type":"function"},{"doc":"Execute one (or more) steps in a flow based on the message stream","ref":"Glific.Flows.FlowContext.html#execute/2","title":"Glific.Flows.FlowContext.execute/2","type":"function"},{"doc":"Retrieve the value from a results string","ref":"Glific.Flows.FlowContext.html#get_result_value/2","title":"Glific.Flows.FlowContext.get_result_value/2","type":"function"},{"doc":"Start a new context, if there is an existing context, blow it away","ref":"Glific.Flows.FlowContext.html#init_context/3","title":"Glific.Flows.FlowContext.init_context/3","type":"function"},{"doc":"Load the context object, given a flow object and a contact. At some point, we'll get the genserver to cache this","ref":"Glific.Flows.FlowContext.html#load_context/2","title":"Glific.Flows.FlowContext.load_context/2","type":"function"},{"doc":"Resets the context and sends control back to the parent context if one exists","ref":"Glific.Flows.FlowContext.html#reset_context/1","title":"Glific.Flows.FlowContext.reset_context/1","type":"function"},{"doc":"Set the new node for the context","ref":"Glific.Flows.FlowContext.html#set_node/2","title":"Glific.Flows.FlowContext.set_node/2","type":"function"},{"doc":"Given an input string, consume the input and advance the state of the context","ref":"Glific.Flows.FlowContext.html#step_forward/2","title":"Glific.Flows.FlowContext.step_forward/2","type":"function"},{"doc":"Update the contact results state as we step through the flow","ref":"Glific.Flows.FlowContext.html#update_results/4","title":"Glific.Flows.FlowContext.update_results/4","type":"function"},{"doc":"Find all the contexts which need to be woken up and processed","ref":"Glific.Flows.FlowContext.html#wakeup/0","title":"Glific.Flows.FlowContext.wakeup/0","type":"function"},{"doc":"","ref":"Glific.Flows.FlowContext.html#t:t/0","title":"Glific.Flows.FlowContext.t/0","type":"type"},{"doc":"The flow revision object which encapsulates the complete flow as emitted by by https://github.com/nyaruka/floweditor","ref":"Glific.Flows.FlowRevision.html","title":"Glific.Flows.FlowRevision","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Flows.FlowRevision.html#changeset/2","title":"Glific.Flows.FlowRevision.changeset/2","type":"function"},{"doc":"Default definition when we create a new flow","ref":"Glific.Flows.FlowRevision.html#default_definition/1","title":"Glific.Flows.FlowRevision.default_definition/1","type":"function"},{"doc":"","ref":"Glific.Flows.FlowRevision.html#t:t/0","title":"Glific.Flows.FlowRevision.t/0","type":"type"},{"doc":"The Localization object which stores all the localizations for all languages for a flow","ref":"Glific.Flows.Localization.html","title":"Glific.Flows.Localization","type":"module"},{"doc":"Given a language id and an action uuid, return the translation if one exists, else return the original text","ref":"Glific.Flows.Localization.html#get_translation/2","title":"Glific.Flows.Localization.get_translation/2","type":"function"},{"doc":"Process a json structure from floweditor to the Glific data types","ref":"Glific.Flows.Localization.html#process/1","title":"Glific.Flows.Localization.process/1","type":"function"},{"doc":"","ref":"Glific.Flows.Localization.html#t:t/0","title":"Glific.Flows.Localization.t/0","type":"type"},{"doc":"substitute the contact fileds and result sets in the messages","ref":"Glific.Flows.MessageVarParser.html","title":"Glific.Flows.MessageVarParser","type":"module"},{"doc":"parse the message with variables","ref":"Glific.Flows.MessageVarParser.html#parse/2","title":"Glific.Flows.MessageVarParser.parse/2","type":"function"},{"doc":"The Node object which encapsulates one node in a given flow","ref":"Glific.Flows.Node.html","title":"Glific.Flows.Node","type":"module"},{"doc":"Execute a node, given a message stream. Consume the message stream as processing occurs","ref":"Glific.Flows.Node.html#execute/3","title":"Glific.Flows.Node.execute/3","type":"function"},{"doc":"Process a json structure from floweditor to the Glific data types","ref":"Glific.Flows.Node.html#process/3","title":"Glific.Flows.Node.process/3","type":"function"},{"doc":"","ref":"Glific.Flows.Node.html#t:t/0","title":"Glific.Flows.Node.t/0","type":"type"},{"doc":"The Router object which encapsulates the router in a given node.","ref":"Glific.Flows.Router.html","title":"Glific.Flows.Router","type":"module"},{"doc":"Execute a router, given a message stream. Consume the message stream as processing occurs","ref":"Glific.Flows.Router.html#execute/3","title":"Glific.Flows.Router.execute/3","type":"function"},{"doc":"Process a json structure from floweditor to the Glific data types","ref":"Glific.Flows.Router.html#process/3","title":"Glific.Flows.Router.process/3","type":"function"},{"doc":"","ref":"Glific.Flows.Router.html#t:t/0","title":"Glific.Flows.Router.t/0","type":"type"},{"doc":"The Case object which encapsulates one category in a given node.","ref":"Glific.Flows.Templating.html","title":"Glific.Flows.Templating","type":"module"},{"doc":"Process a json structure from floweditor to the Glific data types","ref":"Glific.Flows.Templating.html#process/2","title":"Glific.Flows.Templating.process/2","type":"function"},{"doc":"","ref":"Glific.Flows.Templating.html#t:t/0","title":"Glific.Flows.Templating.t/0","type":"type"},{"doc":"The Wait object which encapsulates the wait for a router","ref":"Glific.Flows.Wait.html","title":"Glific.Flows.Wait","type":"module"},{"doc":"Execute a exit, given a message stream.","ref":"Glific.Flows.Wait.html#execute/3","title":"Glific.Flows.Wait.execute/3","type":"function"},{"doc":"Process a json structure from floweditor to the Glific data types","ref":"Glific.Flows.Wait.html#process/3","title":"Glific.Flows.Wait.process/3","type":"function"},{"doc":"","ref":"Glific.Flows.Wait.html#t:t/0","title":"Glific.Flows.Wait.t/0","type":"type"},{"doc":"The Groups context.","ref":"Glific.Groups.html","title":"Glific.Groups","type":"module"},{"doc":"Returns an %Ecto.Changeset{} for tracking group changes.Examplesiex&gt; change_group(group) %Ecto.Changeset{data: %Group{}}","ref":"Glific.Groups.html#change_group/2","title":"Glific.Groups.change_group/2","type":"function"},{"doc":"Return the count of groups, using the same filter as list_groups","ref":"Glific.Groups.html#count_groups/1","title":"Glific.Groups.count_groups/1","type":"function"},{"doc":"Creates a contact group.Examplesiex&gt; create_contact_group(%{field: value}) {:ok, %Contact{}} iex&gt; create_contact_group(%{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Groups.html#create_contact_group/1","title":"Glific.Groups.create_contact_group/1","type":"function"},{"doc":"Creates a group.Examplesiex&gt; create_group(%{field: value}) {:ok, %Group{}} iex&gt; create_group(%{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Groups.html#create_group/1","title":"Glific.Groups.create_group/1","type":"function"},{"doc":"Creates a user group.Examplesiex&gt; create_user_group(%{field: value}) {:ok, %User{}} iex&gt; create_user_group(%{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Groups.html#create_user_group/1","title":"Glific.Groups.create_user_group/1","type":"function"},{"doc":"Deletes a contact group.Examplesiex&gt; delete_contact_group(contact_group) {:ok, %ContactGroup{}} iex&gt; delete_contact_group(contact_group) {:error, %Ecto.Changeset{}}","ref":"Glific.Groups.html#delete_contact_group/1","title":"Glific.Groups.delete_contact_group/1","type":"function"},{"doc":"Deletes a group.Examplesiex&gt; delete_group(group) {:ok, %Group{}} iex&gt; delete_group(group) {:error, %Ecto.Changeset{}}","ref":"Glific.Groups.html#delete_group/1","title":"Glific.Groups.delete_group/1","type":"function"},{"doc":"Deletes a user group.Examplesiex&gt; delete_user_group(user_group) {:ok, %UserGroup{}} iex&gt; delete_user_group(user_group) {:error, %Ecto.Changeset{}}","ref":"Glific.Groups.html#delete_user_group/1","title":"Glific.Groups.delete_user_group/1","type":"function"},{"doc":"Gets a single group.Raises Ecto.NoResultsError if the Group does not exist.Examplesiex&gt; get_group!(123) %Group{} iex&gt; get_group!(456) ** (Ecto.NoResultsError)","ref":"Glific.Groups.html#get_group!/1","title":"Glific.Groups.get_group!/1","type":"function"},{"doc":"Returns the list of groups.Examplesiex&gt; list_groups() [%Group{}, ...]","ref":"Glific.Groups.html#list_groups/1","title":"Glific.Groups.list_groups/1","type":"function"},{"doc":"Updates a group.Examplesiex&gt; update_group(group, %{field: new_value}) {:ok, %Group{}} iex&gt; update_group(group, %{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Groups.html#update_group/2","title":"Glific.Groups.update_group/2","type":"function"},{"doc":"A pipe for managing the contact groups","ref":"Glific.Groups.ContactGroup.html","title":"Glific.Groups.ContactGroup","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Groups.ContactGroup.html#changeset/2","title":"Glific.Groups.ContactGroup.changeset/2","type":"function"},{"doc":"","ref":"Glific.Groups.ContactGroup.html#t:t/0","title":"Glific.Groups.ContactGroup.t/0","type":"type"},{"doc":"The minimal wrapper for the base Group structure","ref":"Glific.Groups.Group.html","title":"Glific.Groups.Group","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Groups.Group.html#changeset/2","title":"Glific.Groups.Group.changeset/2","type":"function"},{"doc":"","ref":"Glific.Groups.Group.html#t:t/0","title":"Glific.Groups.Group.t/0","type":"type"},{"doc":"A pipe for managing the user groups","ref":"Glific.Groups.UserGroup.html","title":"Glific.Groups.UserGroup","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Groups.UserGroup.html#changeset/2","title":"Glific.Groups.UserGroup.changeset/2","type":"function"},{"doc":"","ref":"Glific.Groups.UserGroup.html#t:t/0","title":"Glific.Groups.UserGroup.t/0","type":"type"},{"doc":"The Messages context.","ref":"Glific.Messages.html","title":"Glific.Messages","type":"module"},{"doc":"Returns an %Ecto.Changeset{} for tracking message changes.Examplesiex&gt; change_message(message) %Ecto.Changeset{data: %Message{}}","ref":"Glific.Messages.html#change_message/2","title":"Glific.Messages.change_message/2","type":"function"},{"doc":"Returns an %Ecto.Changeset{} for tracking message media changes.Examplesiex&gt; change_message_media(message_media) %Ecto.Changeset{data: %MessageMedia{}}","ref":"Glific.Messages.html#change_message_media/2","title":"Glific.Messages.change_message_media/2","type":"function"},{"doc":"Return the count of messages, using the same filter as list_messages","ref":"Glific.Messages.html#count_messages/1","title":"Glific.Messages.count_messages/1","type":"function"},{"doc":"Return the count of messages, using the same filter as list_messages","ref":"Glific.Messages.html#count_messages_media/1","title":"Glific.Messages.count_messages_media/1","type":"function"},{"doc":"Send a hsm template message to the specific contact.","ref":"Glific.Messages.html#create_and_send_hsm_message/3","title":"Glific.Messages.create_and_send_hsm_message/3","type":"function"},{"doc":"Create and send verification message Using session template of shortcode 'verification'","ref":"Glific.Messages.html#create_and_send_otp_verification_message/2","title":"Glific.Messages.create_and_send_otp_verification_message/2","type":"function"},{"doc":"Send a session template to the specific contact. This is typically used in automation","ref":"Glific.Messages.html#create_and_send_session_template/2","title":"Glific.Messages.create_and_send_session_template/2","type":"function"},{"doc":"Creates a message.Examplesiex&gt; create_message(%{field: value}) {:ok, %Message{}} iex&gt; create_message(%{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Messages.html#create_message/1","title":"Glific.Messages.create_message/1","type":"function"},{"doc":"Creates a message media.Examplesiex&gt; create_message_media(%{field: value}) {:ok, %MessageMedia{}} iex&gt; create_message_media(%{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Messages.html#create_message_media/1","title":"Glific.Messages.create_message_media/1","type":"function"},{"doc":"Deletes a message.Examplesiex&gt; delete_message(message) {:ok, %Message{}} iex&gt; delete_message(message) {:error, %Ecto.Changeset{}}","ref":"Glific.Messages.html#delete_message/1","title":"Glific.Messages.delete_message/1","type":"function"},{"doc":"Deletes a message media.Examplesiex&gt; delete_message_media(message_media) {:ok, %MessageMedia{}} iex&gt; delete_message_media(message_media) {:error, %Ecto.Changeset{}}","ref":"Glific.Messages.html#delete_message_media/1","title":"Glific.Messages.delete_message_media/1","type":"function"},{"doc":"Gets a single message.Raises Ecto.NoResultsError if the Message does not exist.Examplesiex&gt; get_message!(123) %Message{} iex&gt; get_message!(456) ** (Ecto.NoResultsError)","ref":"Glific.Messages.html#get_message!/1","title":"Glific.Messages.get_message!/1","type":"function"},{"doc":"Gets a single message media.Raises Ecto.NoResultsError if the Message media does not exist.Examplesiex&gt; get_message_media!(123) %MessageMedia{} iex&gt; get_message_media!(456) ** (Ecto.NoResultsError)","ref":"Glific.Messages.html#get_message_media!/1","title":"Glific.Messages.get_message_media!/1","type":"function"},{"doc":"Given a list of message ids builds a conversation list with most recent conversations at the beginning of the list","ref":"Glific.Messages.html#list_conversations/1","title":"Glific.Messages.list_conversations/1","type":"function"},{"doc":"Returns the list of filtered messages.Examplesiex&gt; list_messages(map()) [%Message{}, ...]","ref":"Glific.Messages.html#list_messages/1","title":"Glific.Messages.list_messages/1","type":"function"},{"doc":"Returns the list of message media.Examplesiex&gt; list_messages_media(map()) [%MessageMedia{}, ...]","ref":"Glific.Messages.html#list_messages_media/1","title":"Glific.Messages.list_messages_media/1","type":"function"},{"doc":"Check if the tag is present in message","ref":"Glific.Messages.html#tag_in_message?/2","title":"Glific.Messages.tag_in_message?/2","type":"function"},{"doc":"Updates a message.Examplesiex&gt; update_message(message, %{field: new_value}) {:ok, %Message{}} iex&gt; update_message(message, %{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Messages.html#update_message/2","title":"Glific.Messages.update_message/2","type":"function"},{"doc":"Updates a message media.Examplesiex&gt; update_message_media(message_media, %{field: new_value}) {:ok, %MessageMedia{}} iex&gt; update_message_media(message_media, %{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Messages.html#update_message_media/2","title":"Glific.Messages.update_message_media/2","type":"function"},{"doc":"Message media are mapped with a message","ref":"Glific.Messages.MessageMedia.html","title":"Glific.Messages.MessageMedia","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Messages.MessageMedia.html#changeset/2","title":"Glific.Messages.MessageMedia.changeset/2","type":"function"},{"doc":"","ref":"Glific.Messages.MessageMedia.html#t:t/0","title":"Glific.Messages.MessageMedia.t/0","type":"type"},{"doc":"The Partners context. This is the gateway for the application to access/update all the organization and Provider information.","ref":"Glific.Partners.html","title":"Glific.Partners","type":"module"},{"doc":"Returns an %Ecto.Changeset{} for tracking organization changes.Examplesiex&gt; Glific.Partners.change_organization(organization) %Ecto.Changeset{data: %Glific.Partners.Organization{}}","ref":"Glific.Partners.html#change_organization/2","title":"Glific.Partners.change_organization/2","type":"function"},{"doc":"Returns an %Ecto.Changeset{} for tracking provider changes.Examplesiex&gt; change_provider(provider) %Ecto.Changeset{data: %Provider{}}","ref":"Glific.Partners.html#change_provider/2","title":"Glific.Partners.change_provider/2","type":"function"},{"doc":"Return the count of organizations, using the same filter as list_organizations","ref":"Glific.Partners.html#count_organizations/1","title":"Glific.Partners.count_organizations/1","type":"function"},{"doc":"Return the count of providers, using the same filter as list_providers","ref":"Glific.Partners.html#count_providers/1","title":"Glific.Partners.count_providers/1","type":"function"},{"doc":"Creates a organization.Examplesiex&gt; Glific.Partners.create_organization(%{name: value}) {:ok, %Glific.Partners.Organization{}} iex&gt; Glific.Partners.create_organization(%{bad_field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Partners.html#create_organization/1","title":"Glific.Partners.create_organization/1","type":"function"},{"doc":"Creates a provider.Examplesiex&gt; create_provider(%{field: value}) {:ok, %Provider{}} iex&gt; create_provider(%{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Partners.html#create_provider/1","title":"Glific.Partners.create_provider/1","type":"function"},{"doc":"Deletes an Organization.Examplesiex&gt; Glific.Partners.delete_organization(organization) {:ok, %Glific.Partners.Organization{}} iex&gt; delete_organization(organization) {:error, %Ecto.Changeset{}}","ref":"Glific.Partners.html#delete_organization/1","title":"Glific.Partners.delete_organization/1","type":"function"},{"doc":"Deletes a provider.Examplesiex&gt; delete_provider(provider) {:ok, %Provider{}} iex&gt; delete_provider(provider) {:error, %Ecto.Changeset{}}","ref":"Glific.Partners.html#delete_provider/1","title":"Glific.Partners.delete_provider/1","type":"function"},{"doc":"Gets a single organization.Raises Ecto.NoResultsError if the organization does not exist.Examplesiex&gt; Glific.Partners.get_organization!(1) %Glific.Partners.Organization{} iex&gt; Glific.Partners.get_organization!(-1) ** (Ecto.NoResultsError)","ref":"Glific.Partners.html#get_organization!/1","title":"Glific.Partners.get_organization!/1","type":"function"},{"doc":"Gets a single provider.Raises Ecto.NoResultsError if the Provider does not exist.Examplesiex&gt; get_provider!(123) %Provider{} iex&gt; get_provider!(456) ** (Ecto.NoResultsError)","ref":"Glific.Partners.html#get_provider!/1","title":"Glific.Partners.get_provider!/1","type":"function"},{"doc":"Returns the list of organizations.Examplesiex&gt; Glific.Partners.list_organizations() [%Glific.Partners.Organization{}, ...]","ref":"Glific.Partners.html#list_organizations/1","title":"Glific.Partners.list_organizations/1","type":"function"},{"doc":"Returns the list of providers.Examplesiex&gt; list_providers() [%Provider{}, ...]","ref":"Glific.Partners.html#list_providers/1","title":"Glific.Partners.list_providers/1","type":"function"},{"doc":"Updates an organization.Examplesiex&gt; Glific.Partners.update_organization(Organization, %{name: new_name}) {:ok, %Glific.Partners.Organization{}} iex&gt; Glific.Partners.update_organization(Organization, %{abc: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Partners.html#update_organization/2","title":"Glific.Partners.update_organization/2","type":"function"},{"doc":"Updates a provider.Examplesiex&gt; update_provider(provider, %{field: new_value}) {:ok, %Provider{}} iex&gt; update_provider(provider, %{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Partners.html#update_provider/2","title":"Glific.Partners.update_provider/2","type":"function"},{"doc":"Organizations are the group of users who will access the system","ref":"Glific.Partners.Organization.html","title":"Glific.Partners.Organization","type":"module"},{"doc":"Standard changeset pattern we use for all datat types","ref":"Glific.Partners.Organization.html#changeset/2","title":"Glific.Partners.Organization.changeset/2","type":"function"},{"doc":"","ref":"Glific.Partners.Organization.html#t:t/0","title":"Glific.Partners.Organization.t/0","type":"type"},{"doc":"Provider are the third party Business Service providers who will give a access of WhatsApp API","ref":"Glific.Partners.Provider.html","title":"Glific.Partners.Provider","type":"module"},{"doc":"Standard changeset pattern we use for all datat types","ref":"Glific.Partners.Provider.html#changeset/2","title":"Glific.Partners.Provider.changeset/2","type":"function"},{"doc":"","ref":"Glific.Partners.Provider.html#t:t/0","title":"Glific.Partners.Provider.t/0","type":"type"},{"doc":"Process all messages of type consumer and run them thru the various in-built taggers. At a later stage, we will also do translation and dialogflow queries as an offshoot from this GenStage","ref":"Glific.Processor.ConsumerTagger.html","title":"Glific.Processor.ConsumerTagger","type":"module"},{"doc":"This callback handles the nudges in the system. It processes the jobs and then sets a timer to invoke itself when done","ref":"Glific.Processor.ConsumerTagger.html#handle_info/2","title":"Glific.Processor.ConsumerTagger.handle_info/2","type":"function"},{"doc":"Helper functions for all processing modules. Might promote this up at a later stage","ref":"Glific.Processor.Helper.html","title":"Glific.Processor.Helper","type":"module"},{"doc":"Helper function to add tag","ref":"Glific.Processor.Helper.html#add_tag/3","title":"Glific.Processor.Helper.add_tag/3","type":"function"},{"doc":"Given a shortcode and an optional language_id, get the session template matching both, and if not found, just for the shortcode","ref":"Glific.Processor.Helper.html#get_session_message_template/2","title":"Glific.Processor.Helper.get_session_message_template/2","type":"function"},{"doc":"Send a reply to the current sender of the incoming message in the preferred language of the sender","ref":"Glific.Processor.Helper.html#send_session_message_template/2","title":"Glific.Processor.Helper.send_session_message_template/2","type":"function"},{"doc":"Send a reply to the current sender of the incoming message in the preferred language of the sender and associate a tag with it","ref":"Glific.Processor.Helper.html#send_session_message_template_with_tag/4","title":"Glific.Processor.Helper.send_session_message_template_with_tag/4","type":"function"},{"doc":"Common function for downstream consumers since they follow the same pattern","ref":"Glific.Processor.Helper.html#start_link/2","title":"Glific.Processor.Helper.start_link/2","type":"function"},{"doc":"This producer is linked to the message receiving end and gets messages from the external world in the message structure","ref":"Glific.Processor.Producer.html","title":"Glific.Processor.Producer","type":"module"},{"doc":"public endpoint for adding a new message or a set of messages","ref":"Glific.Processor.Producer.html#add/1","title":"Glific.Processor.Producer.add/1","type":"function"},{"doc":"push a message to all consumers on adding","ref":"Glific.Processor.Producer.html#handle_cast/2","title":"Glific.Processor.Producer.handle_cast/2","type":"function"},{"doc":"ignore all requests from consumers via demand call","ref":"Glific.Processor.Producer.html#handle_demand/2","title":"Glific.Processor.Producer.handle_demand/2","type":"function"},{"doc":"A worker to handle send message processes","ref":"Glific.Providers.Glifproxy.Worker.html","title":"Glific.Providers.Glifproxy.Worker","type":"module"},{"doc":"We backoff exponentially but always delay by at least 60 seconds this needs more work and tweaking","ref":"Glific.Providers.Glifproxy.Worker.html#backoff/1","title":"Glific.Providers.Glifproxy.Worker.backoff/1","type":"function"},{"doc":"Standard perform method to use Oban worker","ref":"Glific.Providers.Glifproxy.Worker.html#perform/2","title":"Glific.Providers.Glifproxy.Worker.perform/2","type":"function"},{"doc":"We transform a payload that has been set for sending to a payload that has been tailored for receiving. We need to generate a few random ids for various messages ids","ref":"Glific.Providers.Glifproxy.Worker.html#proxy_message/2","title":"Glific.Providers.Glifproxy.Worker.proxy_message/2","type":"function"},{"doc":"Http API client to intract with Gupshup","ref":"Glific.Providers.Gupshup.ApiClient.html","title":"Glific.Providers.Gupshup.ApiClient","type":"module"},{"doc":"Perform a DELETE request.See request/1 or request/2 for options definition.delete(&quot;/users&quot;) delete(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) delete(client, &quot;/users&quot;) delete(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;])","ref":"Glific.Providers.Gupshup.ApiClient.html#delete/3","title":"Glific.Providers.Gupshup.ApiClient.delete/3","type":"function"},{"doc":"Perform a DELETE request.See request!/1 or request!/2 for options definition.delete!(&quot;/users&quot;) delete!(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) delete!(client, &quot;/users&quot;) delete!(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;])","ref":"Glific.Providers.Gupshup.ApiClient.html#delete!/3","title":"Glific.Providers.Gupshup.ApiClient.delete!/3","type":"function"},{"doc":"Perform a GET request.See request/1 or request/2 for options definition.get(&quot;/users&quot;) get(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) get(client, &quot;/users&quot;) get(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;])","ref":"Glific.Providers.Gupshup.ApiClient.html#get/3","title":"Glific.Providers.Gupshup.ApiClient.get/3","type":"function"},{"doc":"Perform a GET request.See request!/1 or request!/2 for options definition.get!(&quot;/users&quot;) get!(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) get!(client, &quot;/users&quot;) get!(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;])","ref":"Glific.Providers.Gupshup.ApiClient.html#get!/3","title":"Glific.Providers.Gupshup.ApiClient.get!/3","type":"function"},{"doc":"Perform a HEAD request.See request/1 or request/2 for options definition.head(&quot;/users&quot;) head(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) head(client, &quot;/users&quot;) head(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;])","ref":"Glific.Providers.Gupshup.ApiClient.html#head/3","title":"Glific.Providers.Gupshup.ApiClient.head/3","type":"function"},{"doc":"Perform a HEAD request.See request!/1 or request!/2 for options definition.head!(&quot;/users&quot;) head!(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) head!(client, &quot;/users&quot;) head!(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;])","ref":"Glific.Providers.Gupshup.ApiClient.html#head!/3","title":"Glific.Providers.Gupshup.ApiClient.head!/3","type":"function"},{"doc":"Perform a OPTIONS request.See request/1 or request/2 for options definition.options(&quot;/users&quot;) options(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) options(client, &quot;/users&quot;) options(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;])","ref":"Glific.Providers.Gupshup.ApiClient.html#options/3","title":"Glific.Providers.Gupshup.ApiClient.options/3","type":"function"},{"doc":"Perform a OPTIONS request.See request!/1 or request!/2 for options definition.options!(&quot;/users&quot;) options!(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) options!(client, &quot;/users&quot;) options!(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;])","ref":"Glific.Providers.Gupshup.ApiClient.html#options!/3","title":"Glific.Providers.Gupshup.ApiClient.options!/3","type":"function"},{"doc":"Perform a PATCH request.See request/1 or request/2 for options definition.patch(&quot;/users&quot;, %{name: &quot;Jon&quot;}) patch(&quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;]) patch(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}) patch(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;])","ref":"Glific.Providers.Gupshup.ApiClient.html#patch/4","title":"Glific.Providers.Gupshup.ApiClient.patch/4","type":"function"},{"doc":"Perform a PATCH request.See request!/1 or request!/2 for options definition.patch!(&quot;/users&quot;, %{name: &quot;Jon&quot;}) patch!(&quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;]) patch!(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}) patch!(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;])","ref":"Glific.Providers.Gupshup.ApiClient.html#patch!/4","title":"Glific.Providers.Gupshup.ApiClient.patch!/4","type":"function"},{"doc":"Perform a POST request.See request/1 or request/2 for options definition.post(&quot;/users&quot;, %{name: &quot;Jon&quot;}) post(&quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;]) post(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}) post(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;])","ref":"Glific.Providers.Gupshup.ApiClient.html#post/4","title":"Glific.Providers.Gupshup.ApiClient.post/4","type":"function"},{"doc":"Perform a POST request.See request!/1 or request!/2 for options definition.post!(&quot;/users&quot;, %{name: &quot;Jon&quot;}) post!(&quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;]) post!(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}) post!(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;])","ref":"Glific.Providers.Gupshup.ApiClient.html#post!/4","title":"Glific.Providers.Gupshup.ApiClient.post!/4","type":"function"},{"doc":"Perform a PUT request.See request/1 or request/2 for options definition.put(&quot;/users&quot;, %{name: &quot;Jon&quot;}) put(&quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;]) put(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}) put(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;])","ref":"Glific.Providers.Gupshup.ApiClient.html#put/4","title":"Glific.Providers.Gupshup.ApiClient.put/4","type":"function"},{"doc":"Perform a PUT request.See request!/1 or request!/2 for options definition.put!(&quot;/users&quot;, %{name: &quot;Jon&quot;}) put!(&quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;]) put!(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}) put!(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;])","ref":"Glific.Providers.Gupshup.ApiClient.html#put!/4","title":"Glific.Providers.Gupshup.ApiClient.put!/4","type":"function"},{"doc":"Perform a request.Options:method - the request method, one of [:head, :get, :delete, :trace, :options, :post, :put, :patch]:url - either full url e.g. &quot;http://example.com/some/path&quot; or just &quot;/some/path&quot; if using Tesla.Middleware.BaseUrl:query - a keyword list of query params, e.g. [page: 1, per_page: 100]:headers - a keyworld list of headers, e.g. [{&quot;content-type&quot;, &quot;text/plain&quot;}]:body - depends on used middleware:by default it can be a binaryif using e.g. JSON encoding middleware it can be a nested mapif adapter supports it it can be a Stream with any of the above:opts - custom, per-request middleware or adapter optionsExamplesExampleApi.request(method: :get, url: &quot;/users/path&quot;) # use shortcut methods ExampleApi.get(&quot;/users/1&quot;) ExampleApi.post(client, &quot;/users&quot;, %{name: &quot;Jon&quot;})","ref":"Glific.Providers.Gupshup.ApiClient.html#request/2","title":"Glific.Providers.Gupshup.ApiClient.request/2","type":"function"},{"doc":"Perform request and raise in case of error.This is similar to request/2 behaviour from Tesla 0.xSee request/2 for list of available options.","ref":"Glific.Providers.Gupshup.ApiClient.html#request!/2","title":"Glific.Providers.Gupshup.ApiClient.request!/2","type":"function"},{"doc":"Perform a TRACE request.See request/1 or request/2 for options definition.trace(&quot;/users&quot;) trace(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) trace(client, &quot;/users&quot;) trace(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;])","ref":"Glific.Providers.Gupshup.ApiClient.html#trace/3","title":"Glific.Providers.Gupshup.ApiClient.trace/3","type":"function"},{"doc":"Perform a TRACE request.See request!/1 or request!/2 for options definition.trace!(&quot;/users&quot;) trace!(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) trace!(client, &quot;/users&quot;) trace!(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;])","ref":"Glific.Providers.Gupshup.ApiClient.html#trace!/3","title":"Glific.Providers.Gupshup.ApiClient.trace!/3","type":"function"},{"doc":"","ref":"Glific.Providers.Gupshup.ApiClient.html#t:option/0","title":"Glific.Providers.Gupshup.ApiClient.option/0","type":"type"},{"doc":"Messgae API layer between application and Gupshup","ref":"Glific.Providers.Gupshup.Message.html","title":"Glific.Providers.Gupshup.Message","type":"module"},{"doc":"Create and send OTP This function is going to be used by sms_adapter of passwordless_auth library","ref":"Glific.Providers.Gupshup.Message.html#create/1","title":"Glific.Providers.Gupshup.Message.create/1","type":"function"},{"doc":"A worker to handle send message processes","ref":"Glific.Providers.Gupshup.Worker.html","title":"Glific.Providers.Gupshup.Worker","type":"module"},{"doc":"We backoff exponentially but always delay by at least 60 seconds this needs more work and tweaking","ref":"Glific.Providers.Gupshup.Worker.html#backoff/1","title":"Glific.Providers.Gupshup.Worker.backoff/1","type":"function"},{"doc":"Standard perform method to use Oban worker","ref":"Glific.Providers.Gupshup.Worker.html#perform/2","title":"Glific.Providers.Gupshup.Worker.perform/2","type":"function"},{"doc":"The message behaviour which all the providers needs to implement for communication","ref":"Glific.Providers.MessageBehaviour.html","title":"Glific.Providers.MessageBehaviour","type":"behaviour"},{"doc":"","ref":"Glific.Providers.MessageBehaviour.html#c:receive_location/1","title":"Glific.Providers.MessageBehaviour.receive_location/1","type":"callback"},{"doc":"","ref":"Glific.Providers.MessageBehaviour.html#c:receive_media/1","title":"Glific.Providers.MessageBehaviour.receive_media/1","type":"callback"},{"doc":"","ref":"Glific.Providers.MessageBehaviour.html#c:receive_text/1","title":"Glific.Providers.MessageBehaviour.receive_text/1","type":"callback"},{"doc":"","ref":"Glific.Providers.MessageBehaviour.html#c:send_audio/2","title":"Glific.Providers.MessageBehaviour.send_audio/2","type":"callback"},{"doc":"","ref":"Glific.Providers.MessageBehaviour.html#c:send_document/2","title":"Glific.Providers.MessageBehaviour.send_document/2","type":"callback"},{"doc":"","ref":"Glific.Providers.MessageBehaviour.html#c:send_image/2","title":"Glific.Providers.MessageBehaviour.send_image/2","type":"callback"},{"doc":"","ref":"Glific.Providers.MessageBehaviour.html#c:send_text/2","title":"Glific.Providers.MessageBehaviour.send_text/2","type":"callback"},{"doc":"","ref":"Glific.Providers.MessageBehaviour.html#c:send_video/2","title":"Glific.Providers.MessageBehaviour.send_video/2","type":"callback"},{"doc":"A repository that maps to an underlying data store, controlled by the Postgres adapter.We add a few functions to make our life easier with a few helper functions that ecto does not provide.","ref":"Glific.Repo.html","title":"Glific.Repo","type":"module"},{"doc":"Callback implementation for Ecto.Repo.aggregate/3.","ref":"Glific.Repo.html#aggregate/3","title":"Glific.Repo.aggregate/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.aggregate/4.","ref":"Glific.Repo.html#aggregate/4","title":"Glific.Repo.aggregate/4","type":"function"},{"doc":"Callback implementation for Ecto.Repo.all/2.","ref":"Glific.Repo.html#all/2","title":"Glific.Repo.all/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.checkout/2.","ref":"Glific.Repo.html#checkout/2","title":"Glific.Repo.checkout/2","type":"function"},{"doc":"","ref":"Glific.Repo.html#child_spec/1","title":"Glific.Repo.child_spec/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.config/0.","ref":"Glific.Repo.html#config/0","title":"Glific.Repo.config/0","type":"function"},{"doc":"We use this function also in most list_OBJECT api's, where we process the the filter. Centralizing this code at the top level, to make things cleaner","ref":"Glific.Repo.html#count_filter/3","title":"Glific.Repo.count_filter/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.default_options/1.","ref":"Glific.Repo.html#default_options/1","title":"Glific.Repo.default_options/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.delete/2.","ref":"Glific.Repo.html#delete/2","title":"Glific.Repo.delete/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.delete!/2.","ref":"Glific.Repo.html#delete!/2","title":"Glific.Repo.delete!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.delete_all/2.","ref":"Glific.Repo.html#delete_all/2","title":"Glific.Repo.delete_all/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.exists?/2.","ref":"Glific.Repo.html#exists?/2","title":"Glific.Repo.exists?/2","type":"function"},{"doc":"Glific version of get, which returns a tuple with an :ok | :error as the first element","ref":"Glific.Repo.html#fetch/3","title":"Glific.Repo.fetch/3","type":"function"},{"doc":"Glific version of get_by, which returns a tuple with an :ok | :error as the first element","ref":"Glific.Repo.html#fetch_by/3","title":"Glific.Repo.fetch_by/3","type":"function"},{"doc":"Add all the common filters here, rather than in each file","ref":"Glific.Repo.html#filter_with/2","title":"Glific.Repo.filter_with/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get/3.","ref":"Glific.Repo.html#get/3","title":"Glific.Repo.get/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get!/3.","ref":"Glific.Repo.html#get!/3","title":"Glific.Repo.get!/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get_by/3.","ref":"Glific.Repo.html#get_by/3","title":"Glific.Repo.get_by/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get_by!/3.","ref":"Glific.Repo.html#get_by!/3","title":"Glific.Repo.get_by!/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get_dynamic_repo/0.","ref":"Glific.Repo.html#get_dynamic_repo/0","title":"Glific.Repo.get_dynamic_repo/0","type":"function"},{"doc":"Callback implementation for Ecto.Repo.in_transaction?/0.","ref":"Glific.Repo.html#in_transaction?/0","title":"Glific.Repo.in_transaction?/0","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert/2.","ref":"Glific.Repo.html#insert/2","title":"Glific.Repo.insert/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert!/2.","ref":"Glific.Repo.html#insert!/2","title":"Glific.Repo.insert!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert_all/3.","ref":"Glific.Repo.html#insert_all/3","title":"Glific.Repo.insert_all/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert_or_update/2.","ref":"Glific.Repo.html#insert_or_update/2","title":"Glific.Repo.insert_or_update/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert_or_update!/2.","ref":"Glific.Repo.html#insert_or_update!/2","title":"Glific.Repo.insert_or_update!/2","type":"function"},{"doc":"Get map of label to ids for easier lookup for various system objects - language, tag","ref":"Glific.Repo.html#label_id_map/2","title":"Glific.Repo.label_id_map/2","type":"function"},{"doc":"Extracts the limit offset field, and adds to query","ref":"Glific.Repo.html#limit_offset/2","title":"Glific.Repo.limit_offset/2","type":"function"},{"doc":"We use this function in most list_OBJECT api's, where we process the opts and the filter. Centralizing this code at the top level, to make things cleaner","ref":"Glific.Repo.html#list_filter/4","title":"Glific.Repo.list_filter/4","type":"function"},{"doc":"Callback implementation for Ecto.Repo.load/2.","ref":"Glific.Repo.html#load/2","title":"Glific.Repo.load/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.one/2.","ref":"Glific.Repo.html#one/2","title":"Glific.Repo.one/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.one!/2.","ref":"Glific.Repo.html#one!/2","title":"Glific.Repo.one!/2","type":"function"},{"doc":"A funtion which handles the order clause for a data type that has a 'name/body/label' in its schema (which is true for a fair number of Glific's data types)","ref":"Glific.Repo.html#opts_with_field/3","title":"Glific.Repo.opts_with_field/3","type":"function"},{"doc":"An empty function for objects that ignore the opts","ref":"Glific.Repo.html#opts_with_nil/2","title":"Glific.Repo.opts_with_nil/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.preload/3.","ref":"Glific.Repo.html#preload/3","title":"Glific.Repo.preload/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.prepare_query/3.","ref":"Glific.Repo.html#prepare_query/3","title":"Glific.Repo.prepare_query/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.put_dynamic_repo/1.","ref":"Glific.Repo.html#put_dynamic_repo/1","title":"Glific.Repo.put_dynamic_repo/1","type":"function"},{"doc":"A convenience function for SQL-based repositories that executes the given query.See Ecto.Adapters.SQL.query/4 for more information.","ref":"Glific.Repo.html#query/3","title":"Glific.Repo.query/3","type":"function"},{"doc":"A convenience function for SQL-based repositories that executes the given query.See Ecto.Adapters.SQL.query!/4 for more information.","ref":"Glific.Repo.html#query!/3","title":"Glific.Repo.query!/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.rollback/1.","ref":"Glific.Repo.html#rollback/1","title":"Glific.Repo.rollback/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.start_link/1.","ref":"Glific.Repo.html#start_link/1","title":"Glific.Repo.start_link/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.stop/1.","ref":"Glific.Repo.html#stop/1","title":"Glific.Repo.stop/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.stream/2.","ref":"Glific.Repo.html#stream/2","title":"Glific.Repo.stream/2","type":"function"},{"doc":"A convenience function for SQL-based repositories that translates the given query to SQL.See Ecto.Adapters.SQL.to_sql/3 for more information.","ref":"Glific.Repo.html#to_sql/2","title":"Glific.Repo.to_sql/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.transaction/2.","ref":"Glific.Repo.html#transaction/2","title":"Glific.Repo.transaction/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.update/2.","ref":"Glific.Repo.html#update/2","title":"Glific.Repo.update/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.update!/2.","ref":"Glific.Repo.html#update!/2","title":"Glific.Repo.update!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.update_all/3.","ref":"Glific.Repo.html#update_all/3","title":"Glific.Repo.update_all/3","type":"function"},{"doc":"Glific interface to Postgres's full text search","ref":"Glific.Search.Full.html","title":"Glific.Search.Full","type":"module"},{"doc":"","ref":"Glific.Search.Full.html#matching_contact_ids_and_ranks/2","title":"Glific.Search.Full.matching_contact_ids_and_ranks/2","type":"macro"},{"doc":"Simple wrapper function which calls a helper function after normalizing and sanitizing the input. The two functions combined serve to augment the query with the link to the fulltext index","ref":"Glific.Search.Full.html#run/3","title":"Glific.Search.Full.run/3","type":"function"},{"doc":"The Searches context.","ref":"Glific.Searches.html","title":"Glific.Searches","type":"module"},{"doc":"Returns an %Ecto.Changeset{} for tracking search changes.Examplesiex&gt; change_saved_search(search) %Ecto.Changeset{data: %Search{}}","ref":"Glific.Searches.html#change_saved_search/2","title":"Glific.Searches.change_saved_search/2","type":"function"},{"doc":"Creates a search.Examplesiex&gt; create_saved_search(%{field: value}) {:ok, %SavedSearch{}} iex&gt; create_saved_search(%{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Searches.html#create_saved_search/1","title":"Glific.Searches.create_saved_search/1","type":"function"},{"doc":"Deletes a search.Examplesiex&gt; delete_saved_search(search) {:ok, %SavedSearch{}} iex&gt; delete_saved_search(search) {:error, %Ecto.Changeset{}}","ref":"Glific.Searches.html#delete_saved_search/1","title":"Glific.Searches.delete_saved_search/1","type":"function"},{"doc":"Gets a single search.Raises Ecto.NoResultsError if the SavedSearch does not exist.Examplesiex&gt; get_saved_search!(123) %SavedSearch{} iex&gt; get_saved_search!(456) ** (Ecto.NoResultsError)","ref":"Glific.Searches.html#get_saved_search!/1","title":"Glific.Searches.get_saved_search!/1","type":"function"},{"doc":"Returns the list of searches.Examplesiex&gt; list_saved_searches() [%SavedSearch{}, ...]","ref":"Glific.Searches.html#list_saved_searches/1","title":"Glific.Searches.list_saved_searches/1","type":"function"},{"doc":"Full text search interface via Postgres","ref":"Glific.Searches.html#search/1","title":"Glific.Searches.search/1","type":"function"},{"doc":"Updates a search.Examplesiex&gt; update_saved_search(search, %{field: new_value}) {:ok, %SavedSearch{}} iex&gt; update_saved_search(search, %{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Searches.html#update_saved_search/2","title":"Glific.Searches.update_saved_search/2","type":"function"},{"doc":"The minimal wrapper for the base Saved Search structure","ref":"Glific.Searches.SavedSearch.html","title":"Glific.Searches.SavedSearch","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Searches.SavedSearch.html#changeset/2","title":"Glific.Searches.SavedSearch.changeset/2","type":"function"},{"doc":"","ref":"Glific.Searches.SavedSearch.html#t:t/0","title":"Glific.Searches.SavedSearch.t/0","type":"type"},{"doc":"Script for populating the database. We can call this from tests and/or /priv/repo","ref":"Glific.SeedsDev.html","title":"Glific.SeedsDev","type":"module"},{"doc":"Function to populate some basic data that we need for the system to operate. We will split this function up into multiple different ones for test, dev and production","ref":"Glific.SeedsDev.html#seed/0","title":"Glific.SeedsDev.seed/0","type":"function"},{"doc":"Smaller functions to seed various tables. This allows the test functions to call specific seeder functions. In the next phase we will also add unseeder functions as we learn more of the test capabilities","ref":"Glific.SeedsDev.html#seed_tag/0","title":"Glific.SeedsDev.seed_tag/0","type":"function"},{"doc":"Script for populating the database at scale","ref":"Glific.SeedsScale.html","title":"Glific.SeedsScale","type":"module"},{"doc":"The Settings context. This includes language for now.","ref":"Glific.Settings.html","title":"Glific.Settings","type":"module"},{"doc":"Returns an %Ecto.Changeset{} for tracking language changes.Examplesiex&gt; change_language(language) %Ecto.Changeset{data: %Language{}}","ref":"Glific.Settings.html#change_language/2","title":"Glific.Settings.change_language/2","type":"function"},{"doc":"Return the count of languages, using the same filter as list_languages","ref":"Glific.Settings.html#count_languages/1","title":"Glific.Settings.count_languages/1","type":"function"},{"doc":"Creates a language.Examplesiex&gt; create_language(%{field: value}) {:ok, %Language{}} iex&gt; create_language(%{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Settings.html#create_language/1","title":"Glific.Settings.create_language/1","type":"function"},{"doc":"Deletes a language.Examplesiex&gt; delete_language(language) {:ok, %Language{}} iex&gt; delete_language(language) {:error, %Ecto.Changeset{}}","ref":"Glific.Settings.html#delete_language/1","title":"Glific.Settings.delete_language/1","type":"function"},{"doc":"Gets a single language.Raises Ecto.NoResultsError if the Language does not exist.Examplesiex&gt; get_language!(123) %Language{} iex&gt; get_language!(456) ** (Ecto.NoResultsError)","ref":"Glific.Settings.html#get_language!/1","title":"Glific.Settings.get_language!/1","type":"function"},{"doc":"Upserts a language based on the unique indexes in the table. If there is a match it returns the existing contact, else it creates a new one","ref":"Glific.Settings.html#language_upsert/1","title":"Glific.Settings.language_upsert/1","type":"function"},{"doc":"Returns the list of languages.Examplesiex&gt; list_languages() [%Language{}, ...]","ref":"Glific.Settings.html#list_languages/1","title":"Glific.Settings.list_languages/1","type":"function"},{"doc":"Get map of localte to ids for easier lookup for json based flow editor","ref":"Glific.Settings.html#locale_id_map/0","title":"Glific.Settings.locale_id_map/0","type":"function"},{"doc":"Updates a language.Examplesiex&gt; update_language(language, %{field: new_value}) {:ok, %Language{}} iex&gt; update_language(language, %{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Settings.html#update_language/2","title":"Glific.Settings.update_language/2","type":"function"},{"doc":"Ecto schema and minimal interface for the languages table","ref":"Glific.Settings.Language.html","title":"Glific.Settings.Language","type":"module"},{"doc":"Standard changeset pattern we use for all datat types","ref":"Glific.Settings.Language.html#changeset/2","title":"Glific.Settings.Language.changeset/2","type":"function"},{"doc":"Delete changeset pattern we use for all data types","ref":"Glific.Settings.Language.html#delete_changeset/1","title":"Glific.Settings.Language.delete_changeset/1","type":"function"},{"doc":"","ref":"Glific.Settings.Language.html#t:t/0","title":"Glific.Settings.Language.t/0","type":"type"},{"doc":"The API for a generic tagging system on messages that coordinate with different types of taggers. The proposed taggers are: Numeric Keyword EmojisPositive Negative AutomatedCompliments Good Bye Greeting Thank You Welcome Spam","ref":"Glific.Taggers.html","title":"Glific.Taggers","type":"module"},{"doc":"This module is user driven via keywords associated with tags. It reads in all the keywords associated with each tag in the DB and matches it to the input text.","ref":"Glific.Taggers.Keyword.html","title":"Glific.Taggers.Keyword","type":"module"},{"doc":"The numeric tagger which takes the message body and checks if the body is mainly a number in different ways including: Ordinal Numbers (0..19) Cardinal Number (Zero - Ten) Emojis (0..9) Ordinal Hindi Numbers Cardinal Hindi Numbers","ref":"Glific.Taggers.Numeric.html","title":"Glific.Taggers.Numeric","type":"module"},{"doc":"This module will be responsible for all the contact and message status tagging. Like new contacttagg and unread","ref":"Glific.Taggers.Status.html","title":"Glific.Taggers.Status","type":"module"},{"doc":"The Tags Context, which encapsulates and manages tags and the related join tables.","ref":"Glific.Tags.html","title":"Glific.Tags","type":"module"},{"doc":"Returns an %Ecto.Changeset{} for tracking contact changes.Examplesiex&gt; change_contact_tag(contact_tag) %Ecto.Changeset{data: %ContactTag{}}","ref":"Glific.Tags.html#change_contact_tag/2","title":"Glific.Tags.change_contact_tag/2","type":"function"},{"doc":"Returns an %Ecto.Changeset{} for tracking message changes.Examplesiex&gt; change_message_tag(message_tag) %Ecto.Changeset{data: %MessageTag{}}","ref":"Glific.Tags.html#change_message_tag/2","title":"Glific.Tags.change_message_tag/2","type":"function"},{"doc":"Returns an %Ecto.Changeset{} for tracking tag changes.Examplesiex&gt; change_tag(tag) %Ecto.Changeset{data: %Tag{}}","ref":"Glific.Tags.html#change_tag/2","title":"Glific.Tags.change_tag/2","type":"function"},{"doc":"Return the count of tags, using the same filter as list_tags","ref":"Glific.Tags.html#count_tags/1","title":"Glific.Tags.count_tags/1","type":"function"},{"doc":"Creates a contact.Examplesiex&gt; create_contact_tag(%{field: value}) {:ok, %Contact{}} iex&gt; create_contact_tag(%{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Tags.html#create_contact_tag/1","title":"Glific.Tags.create_contact_tag/1","type":"function"},{"doc":"Creates a message tagExamplesiex&gt; create_message_tag(%{field: value}) {:ok, %Message{}}iex&gt; create_message_tag(%{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Tags.html#create_message_tag/1","title":"Glific.Tags.create_message_tag/1","type":"function"},{"doc":"Creates a tag.Examplesiex&gt; create_tag(%{field: value}) {:ok, %Tag{}} iex&gt; create_tag(%{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Tags.html#create_tag/1","title":"Glific.Tags.create_tag/1","type":"function"},{"doc":"Deletes a contact tag.Examplesiex&gt; delete_contact_tag(contact_tag) {:ok, %ContactTag{}} iex&gt; delete_contact_tag(contact_tag) {:error, %Ecto.Changeset{}}","ref":"Glific.Tags.html#delete_contact_tag/1","title":"Glific.Tags.delete_contact_tag/1","type":"function"},{"doc":"Deletes a message tag.Examplesiex&gt; delete_message_tag(message_tag) {:ok, %MessageTag{}} iex&gt; delete_message_tag(message_tag) {:error, %Ecto.Changeset{}}","ref":"Glific.Tags.html#delete_message_tag/1","title":"Glific.Tags.delete_message_tag/1","type":"function"},{"doc":"In Join tables we rarely use the table id. We always know the object ids and hence more convenient to delete an entry via its object ids. We will generalize this function and move it to Repo.ex when we get a better handle on how to do so :)","ref":"Glific.Tags.html#delete_message_tag_by_ids/2","title":"Glific.Tags.delete_message_tag_by_ids/2","type":"function"},{"doc":"Deletes a tag.Examplesiex&gt; delete_tag(tag) {:ok, %Tag{}} iex&gt; delete_tag(tag) {:error, %Ecto.Changeset{}}","ref":"Glific.Tags.html#delete_tag/1","title":"Glific.Tags.delete_tag/1","type":"function"},{"doc":"Gets a single contact.Raises Ecto.NoResultsError if the Contact does not exist.Examplesiex&gt; get_contact_tag!(123) %Contact{} iex&gt; get_contact_tag!(456) ** (Ecto.NoResultsError)","ref":"Glific.Tags.html#get_contact_tag!/1","title":"Glific.Tags.get_contact_tag!/1","type":"function"},{"doc":"Gets a single message.Raises Ecto.NoResultsError if the Message does not exist.Examplesiex&gt; get_message_tag!(123) %Message{} iex&gt; get_message_tag!(456) ** (Ecto.NoResultsError)","ref":"Glific.Tags.html#get_message_tag!/1","title":"Glific.Tags.get_message_tag!/1","type":"function"},{"doc":"Gets a single tag.Raises Ecto.NoResultsError if the Tag does not exist.Examplesiex&gt; get_tag!(123) %Tag{} iex&gt; get_tag!(456) ** (Ecto.NoResultsError)","ref":"Glific.Tags.html#get_tag!/1","title":"Glific.Tags.get_tag!/1","type":"function"},{"doc":"Converts all tag kewords into the map where keyword is the key and tag id is the value","ref":"Glific.Tags.html#keyword_map/0","title":"Glific.Tags.keyword_map/0","type":"function"},{"doc":"Returns the list of contacts tags.Examplesiex&gt; list_contacts_tags() [%ContactTag{}, ...]","ref":"Glific.Tags.html#list_contacts_tags/1","title":"Glific.Tags.list_contacts_tags/1","type":"function"},{"doc":"Returns the list of messages tags.Examplesiex&gt; list_messages_tags() [%MessageTag{}, ...]","ref":"Glific.Tags.html#list_messages_tags/1","title":"Glific.Tags.list_messages_tags/1","type":"function"},{"doc":"Returns the list of tags.Examplesiex&gt; list_tags() [%Tag{}, ...]","ref":"Glific.Tags.html#list_tags/1","title":"Glific.Tags.list_tags/1","type":"function"},{"doc":"Remove a specific tag from contact messages","ref":"Glific.Tags.html#remove_tag_from_all_message/2","title":"Glific.Tags.remove_tag_from_all_message/2","type":"function"},{"doc":"Filter all the status tag and returns as a map","ref":"Glific.Tags.html#status_map/0","title":"Glific.Tags.status_map/0","type":"function"},{"doc":"Generic function to build a tag map for easy queries. Suspect we'll need it for all objects soon, and will promote this to Repo","ref":"Glific.Tags.html#tags_map/1","title":"Glific.Tags.tags_map/1","type":"function"},{"doc":"Updates a contact tag.Examplesiex&gt; update_contact_tag(contact_tag, %{field: new_value}) {:ok, %ContactTag{}} iex&gt; update_contact_tag(contact_tag, %{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Tags.html#update_contact_tag/2","title":"Glific.Tags.update_contact_tag/2","type":"function"},{"doc":"Updates a message tag.Examplesiex&gt; update_message_tag(message_tag, %{field: new_value}) {:ok, %MessageTag{}} iex&gt; update_message_tag(message_tag, %{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Tags.html#update_message_tag/2","title":"Glific.Tags.update_message_tag/2","type":"function"},{"doc":"Updates a tag.Examplesiex&gt; update_tag(tag, %{field: new_value}) {:ok, %Tag{}} iex&gt; update_tag(tag, %{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Tags.html#update_tag/2","title":"Glific.Tags.update_tag/2","type":"function"},{"doc":"A pipe for managing the contact tags","ref":"Glific.Tags.ContactTag.html","title":"Glific.Tags.ContactTag","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Tags.ContactTag.html#changeset/2","title":"Glific.Tags.ContactTag.changeset/2","type":"function"},{"doc":"","ref":"Glific.Tags.ContactTag.html#t:t/0","title":"Glific.Tags.ContactTag.t/0","type":"type"},{"doc":"A file for managing the join table message tags","ref":"Glific.Tags.MessageTag.html","title":"Glific.Tags.MessageTag","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Tags.MessageTag.html#changeset/2","title":"Glific.Tags.MessageTag.changeset/2","type":"function"},{"doc":"","ref":"Glific.Tags.MessageTag.html#t:t/0","title":"Glific.Tags.MessageTag.t/0","type":"type"},{"doc":"Simple container to hold all the message tags we associate with one message","ref":"Glific.Tags.MessageTags.html","title":"Glific.Tags.MessageTags","type":"module"},{"doc":"Creates and/or deletes a list of message tags, each tag attached to the same message","ref":"Glific.Tags.MessageTags.html#update_message_tags/1","title":"Glific.Tags.MessageTags.update_message_tags/1","type":"function"},{"doc":"","ref":"Glific.Tags.MessageTags.html#t:t/0","title":"Glific.Tags.MessageTags.t/0","type":"type"},{"doc":"The minimal wrapper for the base Tag structure","ref":"Glific.Tags.Tag.html","title":"Glific.Tags.Tag","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Tags.Tag.html#changeset/2","title":"Glific.Tags.Tag.changeset/2","type":"function"},{"doc":"","ref":"Glific.Tags.Tag.html#t:t/0","title":"Glific.Tags.Tag.t/0","type":"type"},{"doc":"The Templates context.","ref":"Glific.Templates.html","title":"Glific.Templates","type":"module"},{"doc":"Returns an %Ecto.Changeset{} for tracking session_template changes.Examplesiex&gt; change_session_template(session_template) %Ecto.Changeset{data: %SessionTemplate{}}","ref":"Glific.Templates.html#change_session_template/2","title":"Glific.Templates.change_session_template/2","type":"function"},{"doc":"Return the count of session_templates, using the same filter as list_session_templates","ref":"Glific.Templates.html#count_session_templates/1","title":"Glific.Templates.count_session_templates/1","type":"function"},{"doc":"Creates a session_template.Examplesiex&gt; create_session_template(%{field: value}) {:ok, %SessionTemplate{}} iex&gt; create_session_template(%{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Templates.html#create_session_template/1","title":"Glific.Templates.create_session_template/1","type":"function"},{"doc":"Create a session template form message Body and type will be the message attributes","ref":"Glific.Templates.html#create_template_from_message/1","title":"Glific.Templates.create_template_from_message/1","type":"function"},{"doc":"Deletes a session_template.Examplesiex&gt; delete_session_template(session_template) {:ok, %SessionTemplate{}} iex&gt; delete_session_template(session_template) {:error, %Ecto.Changeset{}}","ref":"Glific.Templates.html#delete_session_template/1","title":"Glific.Templates.delete_session_template/1","type":"function"},{"doc":"Gets a single session_template.Raises Ecto.NoResultsError if the SessionTemplate does not exist.Examplesiex&gt; get_session_template!(123) %SessionTemplate{} iex&gt; get_session_template!(456) ** (Ecto.NoResultsError)","ref":"Glific.Templates.html#get_session_template!/1","title":"Glific.Templates.get_session_template!/1","type":"function"},{"doc":"Returns the list of session_templates.Examplesiex&gt; list_session_templates() [%SessionTemplate{}, ...]","ref":"Glific.Templates.html#list_session_templates/1","title":"Glific.Templates.list_session_templates/1","type":"function"},{"doc":"Gets or Creates a template based on the unique indexes in the table. If there is a match it returns the existing template, else it creates a new one","ref":"Glific.Templates.html#template_upsert/1","title":"Glific.Templates.template_upsert/1","type":"function"},{"doc":"Updates a session_template.Examplesiex&gt; update_session_template(session_template, %{field: new_value}) {:ok, %SessionTemplate{}} iex&gt; update_session_template(session_template, %{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Templates.html#update_session_template/2","title":"Glific.Templates.update_session_template/2","type":"function"},{"doc":"The Users context.","ref":"Glific.Users.html","title":"Glific.Users","type":"module"},{"doc":"Return the count of users, using the same filter as list_users","ref":"Glific.Users.html#count_users/1","title":"Glific.Users.count_users/1","type":"function"},{"doc":"Creates a user.Examplesiex&gt; create_user(%{field: value}) {:ok, %User{}} iex&gt; create_user(%{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Users.html#create_user/1","title":"Glific.Users.create_user/1","type":"function"},{"doc":"Deletes a user.Examplesiex&gt; delete_user(user) {:ok, %User{}} iex&gt; delete_user(user) {:error, %Ecto.Changeset{}}","ref":"Glific.Users.html#delete_user/1","title":"Glific.Users.delete_user/1","type":"function"},{"doc":"Gets a single user.Raises Ecto.NoResultsError if the User does not exist.Examplesiex&gt; get_user!(123) %User{} iex&gt; get_user!(456) ** (Ecto.NoResultsError)","ref":"Glific.Users.html#get_user!/1","title":"Glific.Users.get_user!/1","type":"function"},{"doc":"Returns the list of filtered users.Examplesiex&gt; list_users() [%User{}, ...]","ref":"Glific.Users.html#list_users/1","title":"Glific.Users.list_users/1","type":"function"},{"doc":"Updates a user.Examplesiex&gt; update_user(user, %{field: new_value}) {:ok, %User{}} iex&gt; update_user(user, %{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Users.html#update_user/2","title":"Glific.Users.update_user/2","type":"function"},{"doc":"The entrypoint for defining your web interface, such as controllers, views, channels and so on.This can be used in your application as:use GlificWeb, :controller use GlificWeb, :viewThe definitions below will be executed for every view, controller, etc, so keep them short and clean, focused on imports, uses and aliases.Do NOT define functions inside the quoted expressions below. Instead, define any helper function in modules and import those modules here.","ref":"GlificWeb.html","title":"GlificWeb","type":"module"},{"doc":"When used, dispatch to the appropriate controller/view/etc.","ref":"GlificWeb.html#__using__/1","title":"GlificWeb.__using__/1","type":"macro"},{"doc":"","ref":"GlificWeb.html#channel/0","title":"GlificWeb.channel/0","type":"function"},{"doc":"","ref":"GlificWeb.html#controller/0","title":"GlificWeb.controller/0","type":"function"},{"doc":"","ref":"GlificWeb.html#live_component/0","title":"GlificWeb.live_component/0","type":"function"},{"doc":"","ref":"GlificWeb.html#live_view/0","title":"GlificWeb.live_view/0","type":"function"},{"doc":"","ref":"GlificWeb.html#router/0","title":"GlificWeb.router/0","type":"function"},{"doc":"","ref":"GlificWeb.html#view/0","title":"GlificWeb.view/0","type":"function"},{"doc":"The Pow User Registration Controller","ref":"GlificWeb.API.V1.RegistrationController.html","title":"GlificWeb.API.V1.RegistrationController","type":"module"},{"doc":"The Pow User Session Controller","ref":"GlificWeb.API.V1.SessionController.html","title":"GlificWeb.API.V1.SessionController","type":"module"},{"doc":"PoW error handler for API Authentication","ref":"GlificWeb.APIAuthErrorHandler.html","title":"GlificWeb.APIAuthErrorHandler","type":"module"},{"doc":"Setting the absinthe context, so we can store the current user there","ref":"GlificWeb.Context.html","title":"GlificWeb.Context","type":"module"},{"doc":"Return the current user context based on the authorization header","ref":"GlificWeb.Context.html#build_context/1","title":"GlificWeb.Context.build_context/1","type":"function"},{"doc":"Conveniences for translating and building error messages.","ref":"GlificWeb.ErrorHelpers.html","title":"GlificWeb.ErrorHelpers","type":"module"},{"doc":"Generates tag for inlined form input errors.","ref":"GlificWeb.ErrorHelpers.html#error_tag/2","title":"GlificWeb.ErrorHelpers.error_tag/2","type":"function"},{"doc":"Translates an error message using gettext.","ref":"GlificWeb.ErrorHelpers.html#translate_error/1","title":"GlificWeb.ErrorHelpers.translate_error/1","type":"function"},{"doc":"","ref":"GlificWeb.ErrorView.html","title":"GlificWeb.ErrorView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"GlificWeb.ErrorView.html#__resource__/0","title":"GlificWeb.ErrorView.__resource__/0","type":"function"},{"doc":"Renders the given template locally.","ref":"GlificWeb.ErrorView.html#render/2","title":"GlificWeb.ErrorView.render/2","type":"function"},{"doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"GlificWeb.ErrorView.html#template_not_found/2","title":"GlificWeb.ErrorView.template_not_found/2","type":"function"},{"doc":"The Flow Editor Controller","ref":"GlificWeb.Flows.FlowEditorController.html","title":"GlificWeb.Flows.FlowEditorController","type":"module"},{"doc":"This is used to checking if the connection between frontend and backend is established or not.","ref":"GlificWeb.Flows.FlowEditorController.html#activity/2","title":"GlificWeb.Flows.FlowEditorController.activity/2","type":"function"},{"doc":"A list of all the communication channels. For Glific it's just WhatsApp. We are not supporting them for now. We will come back to this in near future","ref":"GlificWeb.Flows.FlowEditorController.html#channels/2","title":"GlificWeb.Flows.FlowEditorController.channels/2","type":"function"},{"doc":"A list of all the communication channels. For Glific it's just WhatsApp. We are not supporting them for now. We will come back to this in near future","ref":"GlificWeb.Flows.FlowEditorController.html#classifiers/2","title":"GlificWeb.Flows.FlowEditorController.classifiers/2","type":"function"},{"doc":"instead of reading a file we can call it directly from Assests. We will come back on that when we have more clearity of the use cases","ref":"GlificWeb.Flows.FlowEditorController.html#completion/2","title":"GlificWeb.Flows.FlowEditorController.completion/2","type":"function"},{"doc":"Add Contact fields into the database. The response should be a map with 3 keys % { Key: Field name, name: Field display name value_type: type of the value} We are not supporting this for now. We will add that in future","ref":"GlificWeb.Flows.FlowEditorController.html#fields_post/2","title":"GlificWeb.Flows.FlowEditorController.fields_post/2","type":"function"},{"doc":"Let's get all the flows or a latest flow revision","ref":"GlificWeb.Flows.FlowEditorController.html#flows/2","title":"GlificWeb.Flows.FlowEditorController.flows/2","type":"function"},{"doc":"all the supported funcations we provide","ref":"GlificWeb.Flows.FlowEditorController.html#functions/2","title":"GlificWeb.Flows.FlowEditorController.functions/2","type":"function"},{"doc":"Get all the tags so that user can apply them on incoming message. We are not supporting this for now. To enable It should return a list of map having uuid and name as keys [%{uuid: tag.uuid, name: tag.label}] We are not supporting them for now. We will come back to this in near future","ref":"GlificWeb.Flows.FlowEditorController.html#labels/2","title":"GlificWeb.Flows.FlowEditorController.labels/2","type":"function"},{"doc":"Store a lable (new tag) in the system. The return response should be a map of 3 keys. [%{uuid: tag.uuid, name: params[&quot;name&quot;], count}] We are not supporting them for now. We will come back to this in near future","ref":"GlificWeb.Flows.FlowEditorController.html#labels_post/2","title":"GlificWeb.Flows.FlowEditorController.labels_post/2","type":"function"},{"doc":"We are not using this for now but this is required for flow editor config.","ref":"GlificWeb.Flows.FlowEditorController.html#resthooks/2","title":"GlificWeb.Flows.FlowEditorController.resthooks/2","type":"function"},{"doc":"Get all or a specific revision for a flow","ref":"GlificWeb.Flows.FlowEditorController.html#revisions/2","title":"GlificWeb.Flows.FlowEditorController.revisions/2","type":"function"},{"doc":"Save a revision for a flow and get the revision id","ref":"GlificWeb.Flows.FlowEditorController.html#save_revisions/2","title":"GlificWeb.Flows.FlowEditorController.save_revisions/2","type":"function"},{"doc":"We are not sure how to use this but this endpoint is required for flow editor. Will come back to this in future.","ref":"GlificWeb.Flows.FlowEditorController.html#ticketers/2","title":"GlificWeb.Flows.FlowEditorController.ticketers/2","type":"function"},{"doc":"A module providing Internationalization with a gettext-based API.By using Gettext, your module gains a set of macros for translations, for example:import GlificWeb.Gettext # Simple translation gettext(&quot;Here is the string to translate&quot;) # Plural translation ngettext(&quot;Here is the string to translate&quot;, &quot;Here are the strings to translate&quot;, 3) # Domain-based translation dgettext(&quot;errors&quot;, &quot;Here is the error message to translate&quot;)See the Gettext Docs for detailed usage.","ref":"GlificWeb.Gettext.html","title":"GlificWeb.Gettext","type":"module"},{"doc":"Callback implementation for Gettext.Backend.dgettext/3.","ref":"GlificWeb.Gettext.html#dgettext/3","title":"GlificWeb.Gettext.dgettext/3","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dgettext_noop/2.","ref":"GlificWeb.Gettext.html#dgettext_noop/2","title":"GlificWeb.Gettext.dgettext_noop/2","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dngettext/5.","ref":"GlificWeb.Gettext.html#dngettext/5","title":"GlificWeb.Gettext.dngettext/5","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dngettext_noop/3.","ref":"GlificWeb.Gettext.html#dngettext_noop/3","title":"GlificWeb.Gettext.dngettext_noop/3","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dpgettext/4.","ref":"GlificWeb.Gettext.html#dpgettext/4","title":"GlificWeb.Gettext.dpgettext/4","type":"macro"},{"doc":"","ref":"GlificWeb.Gettext.html#dpgettext_noop/3","title":"GlificWeb.Gettext.dpgettext_noop/3","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dpngettext/6.","ref":"GlificWeb.Gettext.html#dpngettext/6","title":"GlificWeb.Gettext.dpngettext/6","type":"macro"},{"doc":"","ref":"GlificWeb.Gettext.html#dpngettext_noop/4","title":"GlificWeb.Gettext.dpngettext_noop/4","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.gettext/2.","ref":"GlificWeb.Gettext.html#gettext/2","title":"GlificWeb.Gettext.gettext/2","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.gettext_comment/1.","ref":"GlificWeb.Gettext.html#gettext_comment/1","title":"GlificWeb.Gettext.gettext_comment/1","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.gettext_noop/1.","ref":"GlificWeb.Gettext.html#gettext_noop/1","title":"GlificWeb.Gettext.gettext_noop/1","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.handle_missing_bindings/2.","ref":"GlificWeb.Gettext.html#handle_missing_bindings/2","title":"GlificWeb.Gettext.handle_missing_bindings/2","type":"function"},{"doc":"Callback implementation for Gettext.Backend.handle_missing_plural_translation/6.","ref":"GlificWeb.Gettext.html#handle_missing_plural_translation/6","title":"GlificWeb.Gettext.handle_missing_plural_translation/6","type":"function"},{"doc":"Callback implementation for Gettext.Backend.handle_missing_translation/4.","ref":"GlificWeb.Gettext.html#handle_missing_translation/4","title":"GlificWeb.Gettext.handle_missing_translation/4","type":"function"},{"doc":"","ref":"GlificWeb.Gettext.html#lgettext/5","title":"GlificWeb.Gettext.lgettext/5","type":"function"},{"doc":"","ref":"GlificWeb.Gettext.html#lngettext/7","title":"GlificWeb.Gettext.lngettext/7","type":"function"},{"doc":"Callback implementation for Gettext.Backend.ngettext/4.","ref":"GlificWeb.Gettext.html#ngettext/4","title":"GlificWeb.Gettext.ngettext/4","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.ngettext_noop/2.","ref":"GlificWeb.Gettext.html#ngettext_noop/2","title":"GlificWeb.Gettext.ngettext_noop/2","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.pgettext/3.","ref":"GlificWeb.Gettext.html#pgettext/3","title":"GlificWeb.Gettext.pgettext/3","type":"macro"},{"doc":"","ref":"GlificWeb.Gettext.html#pgettext_noop/2","title":"GlificWeb.Gettext.pgettext_noop/2","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.pngettext/5.","ref":"GlificWeb.Gettext.html#pngettext/5","title":"GlificWeb.Gettext.pngettext/5","type":"macro"},{"doc":"","ref":"GlificWeb.Gettext.html#pngettext_noop/3","title":"GlificWeb.Gettext.pngettext_noop/3","type":"macro"},{"doc":"Dedicated controller to handle different types of inbound message form Gupshup","ref":"GlificWeb.Providers.Gupshup.Controllers.MessageController.html","title":"GlificWeb.Providers.Gupshup.Controllers.MessageController","type":"module"},{"doc":"Callback audio gupshup image images","ref":"GlificWeb.Providers.Gupshup.Controllers.MessageController.html#audio/2","title":"GlificWeb.Providers.Gupshup.Controllers.MessageController.audio/2","type":"function"},{"doc":"Callback file gupshup image images","ref":"GlificWeb.Providers.Gupshup.Controllers.MessageController.html#file/2","title":"GlificWeb.Providers.Gupshup.Controllers.MessageController.file/2","type":"function"},{"doc":"Callback for gupshup image images","ref":"GlificWeb.Providers.Gupshup.Controllers.MessageController.html#image/2","title":"GlificWeb.Providers.Gupshup.Controllers.MessageController.image/2","type":"function"},{"doc":"Parse text message payload and convert that into Glific message struct","ref":"GlificWeb.Providers.Gupshup.Controllers.MessageController.html#text/2","title":"GlificWeb.Providers.Gupshup.Controllers.MessageController.text/2","type":"function"},{"doc":"Callback video gupshup image images","ref":"GlificWeb.Providers.Gupshup.Controllers.MessageController.html#video/2","title":"GlificWeb.Providers.Gupshup.Controllers.MessageController.video/2","type":"function"},{"doc":"Dedicated controller to handle all the message status requests like read, delivered etc..","ref":"GlificWeb.Providers.Gupshup.Controllers.MessageEventController.html","title":"GlificWeb.Providers.Gupshup.Controllers.MessageEventController","type":"module"},{"doc":"Message has been delivered to whats app","ref":"GlificWeb.Providers.Gupshup.Controllers.MessageEventController.html#delivered/2","title":"GlificWeb.Providers.Gupshup.Controllers.MessageEventController.delivered/2","type":"function"},{"doc":"Message status when the message has been sent to gupshup","ref":"GlificWeb.Providers.Gupshup.Controllers.MessageEventController.html#enqueued/2","title":"GlificWeb.Providers.Gupshup.Controllers.MessageEventController.enqueued/2","type":"function"},{"doc":"Message status when gupshup could not send the message to whats app","ref":"GlificWeb.Providers.Gupshup.Controllers.MessageEventController.html#failed/2","title":"GlificWeb.Providers.Gupshup.Controllers.MessageEventController.failed/2","type":"function"},{"doc":"Default handle for all message event callbacks","ref":"GlificWeb.Providers.Gupshup.Controllers.MessageEventController.html#handler/3","title":"GlificWeb.Providers.Gupshup.Controllers.MessageEventController.handler/3","type":"function"},{"doc":"Message has been read by the beneficiary","ref":"GlificWeb.Providers.Gupshup.Controllers.MessageEventController.html#read/2","title":"GlificWeb.Providers.Gupshup.Controllers.MessageEventController.read/2","type":"function"},{"doc":"Message has been sent to whats app via Gupshup","ref":"GlificWeb.Providers.Gupshup.Controllers.MessageEventController.html#sent/2","title":"GlificWeb.Providers.Gupshup.Controllers.MessageEventController.sent/2","type":"function"},{"doc":"Dedicated controller to handle different types of user events requests like optin an optout form","ref":"GlificWeb.Providers.Gupshup.Controllers.UserEventController.html","title":"GlificWeb.Providers.Gupshup.Controllers.UserEventController","type":"module"},{"doc":"A Gupshup shunt which will redirect all the incoming requests to the gupshup router based on there event type.","ref":"GlificWeb.Providers.Gupshup.Plugs.Shunt.html","title":"GlificWeb.Providers.Gupshup.Plugs.Shunt","type":"module"},{"doc":"A Gupshup router which will redirect all the gupsup incoming request to there controller actions.","ref":"GlificWeb.Providers.Gupshup.Router.html","title":"GlificWeb.Providers.Gupshup.Router","type":"module"},{"doc":"Callback invoked by Plug on every request.","ref":"GlificWeb.Providers.Gupshup.Router.html#call/2","title":"GlificWeb.Providers.Gupshup.Router.call/2","type":"function"},{"doc":"Callback required by Plug that initializes the router for serving web requests.","ref":"GlificWeb.Providers.Gupshup.Router.html#init/1","title":"GlificWeb.Providers.Gupshup.Router.init/1","type":"function"},{"doc":"Module with named helpers generated from GlificWeb.Providers.Gupshup.Router.","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html","title":"GlificWeb.Providers.Gupshup.Router.Helpers","type":"module"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#default_path/3","title":"GlificWeb.Providers.Gupshup.Router.Helpers.default_path/3","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#default_path/4","title":"GlificWeb.Providers.Gupshup.Router.Helpers.default_path/4","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#default_url/3","title":"GlificWeb.Providers.Gupshup.Router.Helpers.default_url/3","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#default_url/4","title":"GlificWeb.Providers.Gupshup.Router.Helpers.default_url/4","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#message_event_path/2","title":"GlificWeb.Providers.Gupshup.Router.Helpers.message_event_path/2","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#message_event_path/3","title":"GlificWeb.Providers.Gupshup.Router.Helpers.message_event_path/3","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#message_event_url/2","title":"GlificWeb.Providers.Gupshup.Router.Helpers.message_event_url/2","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#message_event_url/3","title":"GlificWeb.Providers.Gupshup.Router.Helpers.message_event_url/3","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#message_path/2","title":"GlificWeb.Providers.Gupshup.Router.Helpers.message_path/2","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#message_path/3","title":"GlificWeb.Providers.Gupshup.Router.Helpers.message_path/3","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#message_url/2","title":"GlificWeb.Providers.Gupshup.Router.Helpers.message_url/2","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#message_url/3","title":"GlificWeb.Providers.Gupshup.Router.Helpers.message_url/3","type":"function"},{"doc":"Generates the path information including any necessary prefix.","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#path/2","title":"GlificWeb.Providers.Gupshup.Router.Helpers.path/2","type":"function"},{"doc":"Generates an integrity hash to a static asset given its file path.","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#static_integrity/2","title":"GlificWeb.Providers.Gupshup.Router.Helpers.static_integrity/2","type":"function"},{"doc":"Generates path to a static asset given its file path.","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#static_path/2","title":"GlificWeb.Providers.Gupshup.Router.Helpers.static_path/2","type":"function"},{"doc":"Generates url to a static asset given its file path.","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#static_url/2","title":"GlificWeb.Providers.Gupshup.Router.Helpers.static_url/2","type":"function"},{"doc":"Generates the connection/endpoint base URL without any path information.","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#url/1","title":"GlificWeb.Providers.Gupshup.Router.Helpers.url/1","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#user_event_path/2","title":"GlificWeb.Providers.Gupshup.Router.Helpers.user_event_path/2","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#user_event_path/3","title":"GlificWeb.Providers.Gupshup.Router.Helpers.user_event_path/3","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#user_event_url/2","title":"GlificWeb.Providers.Gupshup.Router.Helpers.user_event_url/2","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#user_event_url/3","title":"GlificWeb.Providers.Gupshup.Router.Helpers.user_event_url/3","type":"function"},{"doc":"Contact Resolver which sits between the GraphQL schema and Glific Contact Context API. This layer basically stiches together one or more calls to resolve the incoming queries.","ref":"GlificWeb.Resolvers.Contacts.html","title":"GlificWeb.Resolvers.Contacts","type":"module"},{"doc":"Get current location of the contact","ref":"GlificWeb.Resolvers.Contacts.html#contact_location/3","title":"GlificWeb.Resolvers.Contacts.contact_location/3","type":"function"},{"doc":"Get the count of contacts filtered by args","ref":"GlificWeb.Resolvers.Contacts.html#count_contacts/3","title":"GlificWeb.Resolvers.Contacts.count_contacts/3","type":"function"},{"doc":"Tag Resolver which sits between the GraphQL schema and Glific Conversation Context API. This layer basically stiches together one or more calls to resolve the incoming queries.","ref":"GlificWeb.Resolvers.Conversations.html","title":"GlificWeb.Resolvers.Conversations","type":"module"},{"doc":"Get a specific conversation by contact id","ref":"GlificWeb.Resolvers.Conversations.html#conversation/3","title":"GlificWeb.Resolvers.Conversations.conversation/3","type":"function"},{"doc":"Get the list of conversations filtered by args For an authenticated session, we can get the current user from the context via this pattern match %{context: %{current_user: current_user}}","ref":"GlificWeb.Resolvers.Conversations.html#conversations/3","title":"GlificWeb.Resolvers.Conversations.conversations/3","type":"function"},{"doc":"Flow Resolver which sits between the GraphQL schema and Glific Flow Context API. This layer basically stiches together one or more calls to resolve the incoming queries.","ref":"GlificWeb.Resolvers.Flows.html","title":"GlificWeb.Resolvers.Flows","type":"module"},{"doc":"Get a specific flow by id","ref":"GlificWeb.Resolvers.Flows.html#flow/3","title":"GlificWeb.Resolvers.Flows.flow/3","type":"function"},{"doc":"Get the list of flows","ref":"GlificWeb.Resolvers.Flows.html#flows/3","title":"GlificWeb.Resolvers.Flows.flows/3","type":"function"},{"doc":"Group Resolver which sits between the GraphQL schema and Glific Group Context API. This layer basically stiches together one or more calls to resolve the incoming queries.","ref":"GlificWeb.Resolvers.Groups.html","title":"GlificWeb.Resolvers.Groups","type":"module"},{"doc":"Get the count of groups filtered by args","ref":"GlificWeb.Resolvers.Groups.html#count_groups/3","title":"GlificWeb.Resolvers.Groups.count_groups/3","type":"function"},{"doc":"Creates an contact group entry","ref":"GlificWeb.Resolvers.Groups.html#create_contact_group/3","title":"GlificWeb.Resolvers.Groups.create_contact_group/3","type":"function"},{"doc":"Creates an group","ref":"GlificWeb.Resolvers.Groups.html#create_group/3","title":"GlificWeb.Resolvers.Groups.create_group/3","type":"function"},{"doc":"Creates an user group entry","ref":"GlificWeb.Resolvers.Groups.html#create_user_group/3","title":"GlificWeb.Resolvers.Groups.create_user_group/3","type":"function"},{"doc":"Deletes an contact group entry","ref":"GlificWeb.Resolvers.Groups.html#delete_contact_group/3","title":"GlificWeb.Resolvers.Groups.delete_contact_group/3","type":"function"},{"doc":"Deletes an group","ref":"GlificWeb.Resolvers.Groups.html#delete_group/3","title":"GlificWeb.Resolvers.Groups.delete_group/3","type":"function"},{"doc":"Deletes an user group entry","ref":"GlificWeb.Resolvers.Groups.html#delete_user_group/3","title":"GlificWeb.Resolvers.Groups.delete_user_group/3","type":"function"},{"doc":"Get a specific group by id","ref":"GlificWeb.Resolvers.Groups.html#group/3","title":"GlificWeb.Resolvers.Groups.group/3","type":"function"},{"doc":"Get the list of groups filtered by args","ref":"GlificWeb.Resolvers.Groups.html#groups/3","title":"GlificWeb.Resolvers.Groups.groups/3","type":"function"},{"doc":"Updates an group","ref":"GlificWeb.Resolvers.Groups.html#update_group/3","title":"GlificWeb.Resolvers.Groups.update_group/3","type":"function"},{"doc":"Message Resolver which sits between the GraphQL schema and Glific Message Context API. This layer basically stiches together one or more calls to resolve the incoming queries.","ref":"GlificWeb.Resolvers.Messages.html","title":"GlificWeb.Resolvers.Messages","type":"module"},{"doc":"Get the count of messages filtered by args","ref":"GlificWeb.Resolvers.Messages.html#count_messages/3","title":"GlificWeb.Resolvers.Messages.count_messages/3","type":"function"},{"doc":"Get the count of message media","ref":"GlificWeb.Resolvers.Messages.html#count_messages_media/3","title":"GlificWeb.Resolvers.Messages.count_messages_media/3","type":"function"},{"doc":"Get a specific message by id","ref":"GlificWeb.Resolvers.Messages.html#message/3","title":"GlificWeb.Resolvers.Messages.message/3","type":"function"},{"doc":"Get a specific message media by id","ref":"GlificWeb.Resolvers.Messages.html#message_media/3","title":"GlificWeb.Resolvers.Messages.message_media/3","type":"function"},{"doc":"Get the list of messages filtered by args","ref":"GlificWeb.Resolvers.Messages.html#messages/3","title":"GlificWeb.Resolvers.Messages.messages/3","type":"function"},{"doc":"Partners Resolver which sits between the GraphQL schema and Glific Partners Context API. This layer basically stiches together one or more calls to resolve the incoming queries.","ref":"GlificWeb.Resolvers.Partners.html","title":"GlificWeb.Resolvers.Partners","type":"module"},{"doc":"Get the count of organizations filtered by args","ref":"GlificWeb.Resolvers.Partners.html#count_organizations/3","title":"GlificWeb.Resolvers.Partners.count_organizations/3","type":"function"},{"doc":"Get the count of providers filtered by args","ref":"GlificWeb.Resolvers.Partners.html#count_providers/3","title":"GlificWeb.Resolvers.Partners.count_providers/3","type":"function"},{"doc":"Creates an organization","ref":"GlificWeb.Resolvers.Partners.html#create_organization/3","title":"GlificWeb.Resolvers.Partners.create_organization/3","type":"function"},{"doc":"Creates a provider","ref":"GlificWeb.Resolvers.Partners.html#create_provider/3","title":"GlificWeb.Resolvers.Partners.create_provider/3","type":"function"},{"doc":"Deletes an organization","ref":"GlificWeb.Resolvers.Partners.html#delete_organization/3","title":"GlificWeb.Resolvers.Partners.delete_organization/3","type":"function"},{"doc":"Deletes a provider","ref":"GlificWeb.Resolvers.Partners.html#delete_provider/3","title":"GlificWeb.Resolvers.Partners.delete_provider/3","type":"function"},{"doc":"Get a specific organization by id","ref":"GlificWeb.Resolvers.Partners.html#organization/3","title":"GlificWeb.Resolvers.Partners.organization/3","type":"function"},{"doc":"Get the list of organizations filtered by args","ref":"GlificWeb.Resolvers.Partners.html#organizations/3","title":"GlificWeb.Resolvers.Partners.organizations/3","type":"function"},{"doc":"Get a specific provider by id","ref":"GlificWeb.Resolvers.Partners.html#provider/3","title":"GlificWeb.Resolvers.Partners.provider/3","type":"function"},{"doc":"Get the list of providers","ref":"GlificWeb.Resolvers.Partners.html#providers/3","title":"GlificWeb.Resolvers.Partners.providers/3","type":"function"},{"doc":"Updates an organization","ref":"GlificWeb.Resolvers.Partners.html#update_organization/3","title":"GlificWeb.Resolvers.Partners.update_organization/3","type":"function"},{"doc":"Updates a provider","ref":"GlificWeb.Resolvers.Partners.html#update_provider/3","title":"GlificWeb.Resolvers.Partners.update_provider/3","type":"function"},{"doc":"Searches Resolver which sits between the GraphQL schema and Glific saved_search Context API. This layer basically stiches together one or more calls to resolve the incoming queries.","ref":"GlificWeb.Resolvers.Searches.html","title":"GlificWeb.Resolvers.Searches","type":"module"},{"doc":"Get a specific saved_search by id","ref":"GlificWeb.Resolvers.Searches.html#saved_search/3","title":"GlificWeb.Resolvers.Searches.saved_search/3","type":"function"},{"doc":"Get the list of saved_searches","ref":"GlificWeb.Resolvers.Searches.html#saved_searches/3","title":"GlificWeb.Resolvers.Searches.saved_searches/3","type":"function"},{"doc":"Settings Resolver which sits between the GraphQL schema and Glific Settings Context API. This layer basically stiches together one or more calls to resolve the incoming queries.","ref":"GlificWeb.Resolvers.Settings.html","title":"GlificWeb.Resolvers.Settings","type":"module"},{"doc":"Get the count of languages filtered by args","ref":"GlificWeb.Resolvers.Settings.html#count_languages/3","title":"GlificWeb.Resolvers.Settings.count_languages/3","type":"function"},{"doc":"Create a new language. Since language is a basic system data type, this operation is an upsert","ref":"GlificWeb.Resolvers.Settings.html#create_language/3","title":"GlificWeb.Resolvers.Settings.create_language/3","type":"function"},{"doc":"Get a specific language by id","ref":"GlificWeb.Resolvers.Settings.html#language/3","title":"GlificWeb.Resolvers.Settings.language/3","type":"function"},{"doc":"Get the list of languages filtered by args","ref":"GlificWeb.Resolvers.Settings.html#languages/3","title":"GlificWeb.Resolvers.Settings.languages/3","type":"function"},{"doc":"Get the list of objects in the database that match the term","ref":"GlificWeb.Resolvers.Settings.html#search/3","title":"GlificWeb.Resolvers.Settings.search/3","type":"function"},{"doc":"Update language data fields","ref":"GlificWeb.Resolvers.Settings.html#update_language/3","title":"GlificWeb.Resolvers.Settings.update_language/3","type":"function"},{"doc":"Tag Resolver which sits between the GraphQL schema and Glific Tag Context API. This layer basically stiches together one or more calls to resolve the incoming queries.","ref":"GlificWeb.Resolvers.Tags.html","title":"GlificWeb.Resolvers.Tags","type":"module"},{"doc":"Get the count of tags filtered by args","ref":"GlificWeb.Resolvers.Tags.html#count_tags/3","title":"GlificWeb.Resolvers.Tags.count_tags/3","type":"function"},{"doc":"Get a specific tag by id","ref":"GlificWeb.Resolvers.Tags.html#tag/3","title":"GlificWeb.Resolvers.Tags.tag/3","type":"function"},{"doc":"Get the list of tags filtered by args","ref":"GlificWeb.Resolvers.Tags.html#tags/3","title":"GlificWeb.Resolvers.Tags.tags/3","type":"function"},{"doc":"Templates Resolver which sits between the GraphQL schema and Glific Templates Context API. This layer basically stiches together one or more calls to resolve the incoming queries.","ref":"GlificWeb.Resolvers.Templates.html","title":"GlificWeb.Resolvers.Templates","type":"module"},{"doc":"Get the count of sessiont templates filtered by args","ref":"GlificWeb.Resolvers.Templates.html#count_session_templates/3","title":"GlificWeb.Resolvers.Templates.count_session_templates/3","type":"function"},{"doc":"Converting a message to message template","ref":"GlificWeb.Resolvers.Templates.html#create_template_from_message/3","title":"GlificWeb.Resolvers.Templates.create_template_from_message/3","type":"function"},{"doc":"Get a specific session template by id","ref":"GlificWeb.Resolvers.Templates.html#session_template/3","title":"GlificWeb.Resolvers.Templates.session_template/3","type":"function"},{"doc":"Get the list of session templates filtered by args","ref":"GlificWeb.Resolvers.Templates.html#session_templates/3","title":"GlificWeb.Resolvers.Templates.session_templates/3","type":"function"},{"doc":"User Resolver which sits between the GraphQL schema and Glific User Context API. This layer basically stiches together one or more calls to resolve the incoming queries.","ref":"GlificWeb.Resolvers.Users.html","title":"GlificWeb.Resolvers.Users","type":"module"},{"doc":"Get the count of users filtered by args","ref":"GlificWeb.Resolvers.Users.html#count_users/3","title":"GlificWeb.Resolvers.Users.count_users/3","type":"function"},{"doc":"a default gateway for all the external requests","ref":"GlificWeb.Router.html","title":"GlificWeb.Router","type":"module"},{"doc":"","ref":"GlificWeb.Router.html#api/2","title":"GlificWeb.Router.api/2","type":"function"},{"doc":"","ref":"GlificWeb.Router.html#api_protected/2","title":"GlificWeb.Router.api_protected/2","type":"function"},{"doc":"","ref":"GlificWeb.Router.html#browser/2","title":"GlificWeb.Router.browser/2","type":"function"},{"doc":"Callback invoked by Plug on every request.","ref":"GlificWeb.Router.html#call/2","title":"GlificWeb.Router.call/2","type":"function"},{"doc":"Callback required by Plug that initializes the router for serving web requests.","ref":"GlificWeb.Router.html#init/1","title":"GlificWeb.Router.init/1","type":"function"},{"doc":"Module with named helpers generated from GlificWeb.Router.","ref":"GlificWeb.Router.Helpers.html","title":"GlificWeb.Router.Helpers","type":"module"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#api_v1_registration_path/2","title":"GlificWeb.Router.Helpers.api_v1_registration_path/2","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#api_v1_registration_path/3","title":"GlificWeb.Router.Helpers.api_v1_registration_path/3","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#api_v1_registration_url/2","title":"GlificWeb.Router.Helpers.api_v1_registration_url/2","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#api_v1_registration_url/3","title":"GlificWeb.Router.Helpers.api_v1_registration_url/3","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#api_v1_session_path/2","title":"GlificWeb.Router.Helpers.api_v1_session_path/2","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#api_v1_session_path/3","title":"GlificWeb.Router.Helpers.api_v1_session_path/3","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#api_v1_session_url/2","title":"GlificWeb.Router.Helpers.api_v1_session_url/2","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#api_v1_session_url/3","title":"GlificWeb.Router.Helpers.api_v1_session_url/3","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#flow_editor_path/2","title":"GlificWeb.Router.Helpers.flow_editor_path/2","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#flow_editor_path/3","title":"GlificWeb.Router.Helpers.flow_editor_path/3","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#flow_editor_path/4","title":"GlificWeb.Router.Helpers.flow_editor_path/4","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#flow_editor_url/2","title":"GlificWeb.Router.Helpers.flow_editor_url/2","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#flow_editor_url/3","title":"GlificWeb.Router.Helpers.flow_editor_url/3","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#flow_editor_url/4","title":"GlificWeb.Router.Helpers.flow_editor_url/4","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#page_path/2","title":"GlificWeb.Router.Helpers.page_path/2","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#page_path/3","title":"GlificWeb.Router.Helpers.page_path/3","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#page_url/2","title":"GlificWeb.Router.Helpers.page_url/2","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#page_url/3","title":"GlificWeb.Router.Helpers.page_url/3","type":"function"},{"doc":"Generates the path information including any necessary prefix.","ref":"GlificWeb.Router.Helpers.html#path/2","title":"GlificWeb.Router.Helpers.path/2","type":"function"},{"doc":"Generates an integrity hash to a static asset given its file path.","ref":"GlificWeb.Router.Helpers.html#static_integrity/2","title":"GlificWeb.Router.Helpers.static_integrity/2","type":"function"},{"doc":"Generates path to a static asset given its file path.","ref":"GlificWeb.Router.Helpers.html#static_path/2","title":"GlificWeb.Router.Helpers.static_path/2","type":"function"},{"doc":"Generates url to a static asset given its file path.","ref":"GlificWeb.Router.Helpers.html#static_url/2","title":"GlificWeb.Router.Helpers.static_url/2","type":"function"},{"doc":"Generates the connection/endpoint base URL without any path information.","ref":"GlificWeb.Router.Helpers.html#url/1","title":"GlificWeb.Router.Helpers.url/1","type":"function"},{"doc":"This is the container for the top level Absinthe GraphQL schema which encapsulates the entire Glific Public API. This file is primarily a container and pulls in the relevant information for data type specific files.","ref":"GlificWeb.Schema.html","title":"GlificWeb.Schema","type":"module"},{"doc":"Used to set some values in the context that we may need in order to run. For now we are just using it for Dataloader perspectives.I think we will be storing authentication and current user in the context map in future releases. We have already started storing current user info in the context map.","ref":"GlificWeb.Schema.html#context/1","title":"GlificWeb.Schema.context/1","type":"function"},{"doc":"Used to apply middleware on all or a group of fields based on pattern matching.It is passed the existing middleware for a field, the field itself, and the object that the field is a part of.","ref":"GlificWeb.Schema.html#middleware/3","title":"GlificWeb.Schema.middleware/3","type":"function"},{"doc":"Used to define the list of plugins to run before and after resolution.","ref":"GlificWeb.Schema.html#plugins/0","title":"GlificWeb.Schema.plugins/0","type":"function"},{"doc":"GraphQL Representation of Glific's Contact Group DataType","ref":"GlificWeb.Schema.ContactGroupTypes.html","title":"GlificWeb.Schema.ContactGroupTypes","type":"module"},{"doc":"GraphQL Representation of Glific's Contact Tag DataType","ref":"GlificWeb.Schema.ContactTagTypes.html","title":"GlificWeb.Schema.ContactTagTypes","type":"module"},{"doc":"GraphQL Representation of Glific's Contact DataType","ref":"GlificWeb.Schema.ContactTypes.html","title":"GlificWeb.Schema.ContactTypes","type":"module"},{"doc":"GraphQL Representation of Glific's Conversation Data. This is virtual and pulled together from multiple pieces by Glific Core","ref":"GlificWeb.Schema.ConversationTypes.html","title":"GlificWeb.Schema.ConversationTypes","type":"module"},{"doc":"Representing our enums in the style Absinthe expects them. We can now use these atoms in the object definitions within the GraphQL Schema","ref":"GlificWeb.Schema.EnumTypes.html","title":"GlificWeb.Schema.EnumTypes","type":"module"},{"doc":"GraphQL Representation of Flow DataType","ref":"GlificWeb.Schema.FlowTypes.html","title":"GlificWeb.Schema.FlowTypes","type":"module"},{"doc":"GraphQL Representation of common data representations used across different Glific's DataType","ref":"GlificWeb.Schema.GenericTypes.html","title":"GlificWeb.Schema.GenericTypes","type":"module"},{"doc":"A forgivable parser which allows integers or strings to represent integers","ref":"GlificWeb.Schema.GenericTypes.html#parse_maybe_integer/1","title":"GlificWeb.Schema.GenericTypes.parse_maybe_integer/1","type":"function"},{"doc":"GraphQL Representation of Glific's Group DataType","ref":"GlificWeb.Schema.GroupTypes.html","title":"GlificWeb.Schema.GroupTypes","type":"module"},{"doc":"GraphQL Representation of Glific's Language DataType","ref":"GlificWeb.Schema.LanguageTypes.html","title":"GlificWeb.Schema.LanguageTypes","type":"module"},{"doc":"GraphQL Representation of Glific's MessageMedia DataType","ref":"GlificWeb.Schema.MessageMediaTypes.html","title":"GlificWeb.Schema.MessageMediaTypes","type":"module"},{"doc":"GraphQL Representation of Glific's Message Tag DataType","ref":"GlificWeb.Schema.MessageTagTypes.html","title":"GlificWeb.Schema.MessageTagTypes","type":"module"},{"doc":"GraphQL Representation of Glific's Message DataType","ref":"GlificWeb.Schema.MessageTypes.html","title":"GlificWeb.Schema.MessageTypes","type":"module"},{"doc":"Implementing middleware functions to transform errors from Ecto Changeset into a format consumable and displayable to the API user. This version is specifically for mutations.","ref":"GlificWeb.Schema.Middleware.ChangesetErrors.html","title":"GlificWeb.Schema.Middleware.ChangesetErrors","type":"module"},{"doc":"This is the main middleware callback.It receives an %Absinthe.Resolution{} struct and it needs to return an %Absinthe.Resolution{} struct. The second argument will be whatever value was passed to the middleware call that setup the middleware.","ref":"GlificWeb.Schema.Middleware.ChangesetErrors.html#call/2","title":"GlificWeb.Schema.Middleware.ChangesetErrors.call/2","type":"function"},{"doc":"Implementing middleware functions to transform errors from Elixir and friends into a format consumable and displayable to the API user. This version is specifically for queries.","ref":"GlificWeb.Schema.Middleware.QueryErrors.html","title":"GlificWeb.Schema.Middleware.QueryErrors","type":"module"},{"doc":"This is the main middleware callback.It receives an %Absinthe.Resolution{} struct and it needs to return an %Absinthe.Resolution{} struct. The second argument will be whatever value was passed to the middleware call that setup the middleware.","ref":"GlificWeb.Schema.Middleware.QueryErrors.html#call/2","title":"GlificWeb.Schema.Middleware.QueryErrors.call/2","type":"function"},{"doc":"GraphQL Representation of Glific's Organization DataType","ref":"GlificWeb.Schema.OrganizationTypes.html","title":"GlificWeb.Schema.OrganizationTypes","type":"module"},{"doc":"GraphQL Representation of Glific's Provider DataType","ref":"GlificWeb.Schema.ProviderTypes.html","title":"GlificWeb.Schema.ProviderTypes","type":"module"},{"doc":"GraphQL Representation of Glific's Search DataType","ref":"GlificWeb.Schema.SearchTypes.html","title":"GlificWeb.Schema.SearchTypes","type":"module"},{"doc":"GraphQL Representation of Glific's Session Template DataType","ref":"GlificWeb.Schema.SessionTemplateTypes.html","title":"GlificWeb.Schema.SessionTemplateTypes","type":"module"},{"doc":"GraphQL Representation of Glific's Tag DataType","ref":"GlificWeb.Schema.TagTypes.html","title":"GlificWeb.Schema.TagTypes","type":"module"},{"doc":"GraphQL Representation of Glific's User Group DataType","ref":"GlificWeb.Schema.UserGroupTypes.html","title":"GlificWeb.Schema.UserGroupTypes","type":"module"},{"doc":"GraphQL Representation of Glific's User DataType","ref":"GlificWeb.Schema.UserTypes.html","title":"GlificWeb.Schema.UserTypes","type":"module"},{"doc":"Glific - Two Way Open Source Communication Platform","ref":"readme.html","title":"Glific - Two Way Open Source Communication Platform","type":"extras"},{"doc":"Install the following packages using your favorite package manager. Links are provided for someInstall ElixirInstall PostgresFor Postgres, for the development server, we default to using postgres/postgres as the username/password. This is configurableThe db user needs to have superuser status on the database since we create a materialized view. This might change in a future release to a table","ref":"readme.html#packages-needed","title":"Glific - Two Way Open Source Communication Platform - Packages Needed","type":"extras"},{"doc":"Download the latest code from GitHub","ref":"readme.html#download-code","title":"Glific - Two Way Open Source Communication Platform - Download code","type":"extras"},{"doc":"Copy the file: config/dev.secret.exs.txt to config/dev.secret.exs and edit it with your credentialsRun mix setupRun mix phx.server","ref":"readme.html#setup","title":"Glific - Two Way Open Source Communication Platform - Setup","type":"extras"},{"doc":"Now you can visit localhost:4000 from your browser.","ref":"readme.html#here-we-go","title":"Glific - Two Way Open Source Communication Platform - Here we go","type":"extras"},{"doc":"You cannot do much from the glific-backend unless you are an API developer. To see Glific in its glory, please install Glific Frontend","ref":"readme.html#install-glific-frontend","title":"Glific - Two Way Open Source Communication Platform - Install glific-frontend","type":"extras"},{"doc":"The frontend and backend are great, but you will need an account with a WhatsApp Business Provider to explore the application. The currently supported backend is Gupshup. You will need to do the following:Create a Gupshup AccountInstall ngrokStart ngrok to proxy port 4000: $ ngrok http 4000 (do this in a new window))Remember the URL it assigns you, something like: https://9f6a7c7822d2.ngrok.ioAlso start the backend server: mix phx.server (do this in a new window)Create a WhatsApp Messaging App on GupshupYou can name it GlificTest and ensure the App Type is Access APIGoto the Settings PageOn that page, Search for Callback URL / Link your BotEnter your callback URL that ngrok gave you, add: /gupshup to the end. Something like: https://9f6a7c7822d2.ngrok.io/gupshup/Click Set. It should give you a Callback set successfully message. If not, check the above steps.Edit config/dev.secret.exs in the backend directoryYou will need to enter your API Key, which can be found by clicking on your profile in the top left corner of your gupshup dashboard","ref":"readme.html#create-and-link-your-gupshup-account","title":"Glific - Two Way Open Source Communication Platform - Create and link your Gupshup Account","type":"extras"},{"doc":"For v0.x releases, we will be resetting the DB and not saving existing state. Run the following commands to update your codebase from the glicic repository.Ensure you are in the top level directory of the glific api code.Get the latest code from master: git switch master; git pullEnsure you have not modified any files in this directory, by running: git statusRun the setup command: mix setup","ref":"readme.html#updating-your-instance","title":"Glific - Two Way Open Source Communication Platform - Updating your instance","type":"extras"},{"doc":"GraphQL API docsCode docs","ref":"readme.html#documentation","title":"Glific - Two Way Open Source Communication Platform - Documentation","type":"extras"},{"doc":"GlificDemo VideoOne PagerProduct FeaturesGlific BlogsGoogle Drive","ref":"readme.html#learn-more","title":"Glific - Two Way Open Source Communication Platform - Learn more","type":"extras"},{"doc":"Chat on Discord","ref":"readme.html#chat-with-us","title":"Glific - Two Way Open Source Communication Platform - Chat with us","type":"extras"},{"doc":"ChangelogAll notable changes to this project will be documented in this file.The format is based on Keep a Changelog, and this project adheres to Semantic Versioning.","ref":"changelog.html","title":"Changelog","type":"extras"},{"doc":"AddedCore Glific DB StructurePhoenix Schema and Context StructureGraphQL API as main interface to the core platformIntegration with 3rd party communication providersUnit Tests for all glific code with 90%+ code and documentation coverageCI system via GitHub ActionsCommunity documentation (README, LICENSE, CHANGELOG, CODE_OF_CONDUCT)","ref":"changelog.html#unreleased","title":"Changelog - [Unreleased]","type":"extras"},{"doc":"Added","ref":"changelog.html#0-1-2020-07-03","title":"Changelog - [0.1] - 2020-07-03","type":"extras"}]